
СДЕЛАТЬ "rename" В NetBeans:

1) выделить нужную переменную или название функции -> нажать cntrl + H;

2) в пункте, в котором нужно вставить измененное имя переменной или функции, вставить нужное имя -> нажать на кнопку Заменить все.





УСТАНОВИТЬ СОЕДИНЕНИЕ ЧЕРЕЗ SFTP:

1) host: 178.155.64.78 - имя узла;

2) port: 22227 - порт.





ИСПРАВЛЕНИЕ ОШИБОК ПРИ УСТАНОВКЕ 1C BITRIX: https://dev.1c-bitrix.ru/support/forum/forum6/topic18130/





ЗАГРУЗИТЬ ПРОЕКТ С GIT НА САЙТ НА СВОЕМ СЕРВЕРЕ И ПОСЛЕ ПРАВКИ ЗАГРУЗИТЬ ПРОЕКТ НА GIT:

1) запустить git bash;

2) прописать в первой строке cd адрес проекта из адресной строки. Например: "$ cd D:/Проекты/PlayFermaGIT";

3) во второй строке прописать: "git clone https://bitbucket.org/bulletodds/landing/src/master";

4) в NetBeans прописать Создать проект с исходным кодом;

5) указать в пункте Исходная папка, которая является последней перед файлом index.php или html;

6) в пункте Выгрузить каталог указать точный адрес уже созданной на сервере папки с сайтом. Например, "/playferma.fabuladesign.ru/public_html";

7) в пункте Выгрузить файлы выбрать -> При сохранении;

8) после окончания редактирования файлов в командной строке git bash набрать "git add ." (если добавляли новые файлы или удаляли какие-либо файлы);

9) затем проверить измененные, новые и удаленные файлы при помощи команды "git status";

10) ЕСЛИ ПРИ "git status" или "git add ." выводится ошибка "fatal: not a git repository (or any of the parent directories): .git", ТО НУЖНО ПРАВИЛЬНО УКАЗАТЬ ПАПКУ
    С ФАЙЛАМИ ДЛЯ ЗАПУШИВАНИЯ В РЕПОЗИТОРИЙ. НАПРИМЕР, ВМЕСТО  "cd D:/Проекты/PlayFermaGIT" УКАЗАТЬ  "cd D:/Проекты/PlayFermaGIT/master".

11) затем закоммитить изменения при помощи команды "git commit -am "Комментарий коммита"";

12) если не вылезла фатальная ошибка, то ввести "git push".





ПОДКЛЮЧИТЬСЯ К УДАЛЕННОМУ РЕПОЗИТОРИЮ GIT, ЗАПУЛИТЬ / ЗАПУШИТЬ ИЗМЕНЕНИЯ:

1) запустить git bash;

2) прописать в первой строке cd адрес проекта из адресной строки. Например: "$ cd D:/Проекты/PlayFermaGIT/master".
   master - название ветки репозитория;

3) в git bash сделать "git pull";

4) внести изменения в файлы;

5) сделать "git add .";

6) сделать "git status";

7) если "git add ." вывел ошибку при вводе, то его нужно ввести после "git status";

8) ввести "git commit -am "Комментарий"";

9) ввести "git push".




НАСТРОИТЬ .htaccess НА САЙТЕ С yii2

1) скачать архив yii2-htaccess-master с github https://github.com/master-saita/yii2-htaccess;

2) открыть файловую систему сайта;

3) в корневую папку public_html скопировать файл .htaccess из папки yii2-htaccess-master;

4) в папку frontend и backend скопировать файл .htaccess из соответствующей папки в yii2-htaccess-master;


НАСТРОИТЬ БАЗУ ДАННЫХ НА yii2

1) открыть файл main-local.php в папках: common -> config;

2) в строке 'dsn' => 'mysql:host=localhost;dbname=', после dbname= вставить логин;

3) в строках 'username' => '', 'password' => '', вставить логин и пароль.





ДЛЯ ТОГО, ЧТОБЫ ИЗМЕНИТЬ SWIPER, нужно зайти в файл custom.jquery.js и изменить название скрипт нужного слайдера.

PHP запрос на index.php с оператором if else

<? if ($APPLICATION->GetCurPage(true) == SITE_DIR . "index.php") { ?>
<? } else { ?>
<? } ?>


PHP - код для отправки сообщений с почтового ящика, созданного на электронной почте:

<?php
$config['smtp_username'] = 'dinar.fabula@yandex.ru';  //Смените на адрес своего почтового ящика.
$config['smtp_port'] = '465'; // Порт работы.
$config['smtp_host'] =  'ssl://smtp.yandex.ru';  //сервер для отправки почты
$config['smtp_password'] = 'QB3EJgt!V7fjqdQ';  //Измените пароль
$config['smtp_debug'] = true;  //Если Вы хотите видеть сообщения ошибок, укажите true вместо false
$config['smtp_charset'] = 'utf-8';	//кодировка сообщений. (windows-1251 или utf-8, итд)
$config['smtp_from'] = 'DCCN'; //Ваше имя - или имя Вашего сайта. Будет показывать при прочтении в поле "От кого"

function smtpmail($to='', $mail_to, $subject, $message, $headers='') {
	global $config;
	$SEND =	"Date: ".date("D, d M Y H:i:s") . " UT\r\n";
	$SEND .= 'Subject: =?'.$config['smtp_charset'].'?B?'.base64_encode($subject)."=?=\r\n";
	if ($headers) $SEND .= $headers."\r\n\r\n";
	else
	{
			$SEND .= "Reply-To: ".$config['smtp_username']."\r\n";
			$SEND .= "To: \"=?".$config['smtp_charset']."?B?".base64_encode($to)."=?=\" <$mail_to>\r\n";
			$SEND .= "MIME-Version: 1.0\r\n";
			$SEND .= "Content-Type: text/html; charset=\"".$config['smtp_charset']."\"\r\n";
			$SEND .= "Content-Transfer-Encoding: 8bit\r\n";
			$SEND .= "From: \"=?".$config['smtp_charset']."?B?".base64_encode($config['smtp_from'])."=?=\" <".$config['smtp_username'].">\r\n";
			$SEND .= "X-Priority: 3\r\n\r\n";
	}
	$SEND .=  $message."\r\n";
	 if( !$socket = fsockopen($config['smtp_host'], $config['smtp_port'], $errno, $errstr, 30) ) {
		if ($config['smtp_debug']) echo $errno."<br>".$errstr;
		return false;
	 }
 
	if (!server_parse($socket, "220", __LINE__)) return false;
 
	fputs($socket, "HELO " . $config['smtp_host'] . "\r\n");
	if (!server_parse($socket, "250", __LINE__)) {
		if ($config['smtp_debug']) echo '<p>Не могу отправить HELO!</p>';
		fclose($socket);
		return false;
	}
	fputs($socket, "AUTH LOGIN\r\n");
	if (!server_parse($socket, "334", __LINE__)) {
		if ($config['smtp_debug']) echo '<p>Не могу найти ответ на запрос авторизаци.</p>';
		fclose($socket);
		return false;
	}
	fputs($socket, base64_encode($config['smtp_username']) . "\r\n");
	if (!server_parse($socket, "334", __LINE__)) {
		if ($config['smtp_debug']) echo '<p>Логин авторизации не был принят сервером!</p>';
		fclose($socket);
		return false;
	}
	fputs($socket, base64_encode($config['smtp_password']) . "\r\n");
	if (!server_parse($socket, "235", __LINE__)) {
		if ($config['smtp_debug']) echo '<p>Пароль не был принят сервером как верный! Ошибка авторизации!</p>';
		fclose($socket);
		return false;
	}
	fputs($socket, "MAIL FROM: <".$config['smtp_username'].">\r\n");
	if (!server_parse($socket, "250", __LINE__)) {
		if ($config['smtp_debug']) echo '<p>Не могу отправить комманду MAIL FROM: </p>';
		fclose($socket);
		return false;
	}
	fputs($socket, "RCPT TO: <" . $mail_to . ">\r\n");
 
	if (!server_parse($socket, "250", __LINE__)) {
		if ($config['smtp_debug']) echo '<p>Не могу отправить комманду RCPT TO: </p>';
		fclose($socket);
		return false;
	}
	fputs($socket, "DATA\r\n");
 
	if (!server_parse($socket, "354", __LINE__)) {
		if ($config['smtp_debug']) echo '<p>Не могу отправить комманду DATA</p>';
		fclose($socket);
		return false;
	}
	fputs($socket, $SEND."\r\n.\r\n");
 
	if (!server_parse($socket, "250", __LINE__)) {
		if ($config['smtp_debug']) echo '<p>Не смог отправить тело письма. Письмо не было отправленно!</p>';
		fclose($socket);
		return false;
	}
	fputs($socket, "QUIT\r\n");
	fclose($socket);
	return TRUE;
}

function server_parse($socket, $response, $line = __LINE__) {
	global $config;
	while (@substr($server_response, 3, 1) != ' ') {
		if (!($server_response = fgets($socket, 256))) {
			if ($config['smtp_debug']) echo "<p>Проблемы с отправкой почты!</p>$response<br>$line<br>";
 			return false;
 		}
	}
	if (!(substr($server_response, 0, 3) == $response)) {
		if ($config['smtp_debug']) echo "<p>Проблемы с отправкой почты!</p>$response<br>$line<br>";
		return false;
	}
	return true;
}

if((isset($_POST['contacts1'])&&$_POST['contacts2']&&$_POST['contacts3']!="")){ //Проверка отправилось ли наше поля name и не пустые ли они
        /*$descr = '';
        if(isset($_POST['descr'])){
            $descr = $_POST['descr'];
        }*/
        
        $to1 = 'vladimirandreev260@gmail.com';
        $subject = 'Письмо из формы обратной связи «Dinar»'; //Загoловок сообщения
        $message = '
                <html>
                    <head>
                        <title>'.$subject.'</title>
                    </head>
                    <body>
                        <p>Имя: '.$_POST['contacts1'].'</p>
                        <p>Телефон: '.$_POST['contacts2'].'</p>
                        <p>Сообщение: '.$_POST['contacts3'].'</p>                        
                    </body>
                </html>'; //Текст нащего сообщения можно использовать HTML теги
        $headers  = 'Content-type: text/html; charset="utf-8" \r\n'; //Кодировка письма
        $headers .= "From: Отправитель <dinar.fabula@yandex.ru>\r\n"; //Наименование и почта отправителя
        mail($to1, $subject, $message, $headers); //Отправка письма с помощью функции mail
}
?>




НАСТРОИТЬ ОТПРАВКУ КОПИИ ПИСЬМА В ЭЛЕМЕНТ ИНФОБЛОКА:

1) зайти в админку битрикс -> Контент -> Инфоблоки -> Типы инфоблоков -> создать инфоблок и заполнить его свойствами по количеству input в форме отправки;

2) зайти в файл send.php, который отвечает за отправку копии письма, -> добавить в него следующий код после кода, который отправляет письмо на почту:

        require_once($_SERVER["DOCUMENT_ROOT"]."/bitrix/modules/main/include/prolog_before.php");
        CModule::IncludeModule("iblock");
        $el = new CIBlockElement;
        $PROP = array();
        $PROP[187] = $_POST['target'];  // свойству с кодом 12 присваиваем значение "Белый"
        $PROP[188] = $_POST['summ']; // свойству с кодом 3 присваиваем значение 38
        $PROP[189] = $_POST['city'];
        $PROP[190] = $_POST['surname'];
        $PROP[191] = $_POST['name'];
        $PROP[192] = $_POST['patronymic'];
        $PROP[193] = $_POST['mail'];
        $PROP[194] = $_POST['phone'];
        $arLoadProductArray = Array(  
           'MODIFIED_BY' => $GLOBALS['USER']->GetID(), // элемент изменен текущим пользователем  
           'IBLOCK_SECTION_ID' => false, // элемент лежит в корне раздела  
           'IBLOCK_ID' => 16,
           'PROPERTY_VALUES' => $PROP,
           'NAME' => 'Элемент',  
           'ACTIVE' => 'Y', // активен  
           'PREVIEW_TEXT' => 'текст для списка элементов',  
           'DETAIL_TEXT' => 'текст для детального просмотра',  
           'DETAIL_PICTURE' => $_FILES['DETAIL_PICTURE'] // картинка, загружаемая из файлового поля веб-формы с именем DETAIL_PICTURE
        );

        if($PRODUCT_ID = $el->Add($arLoadProductArray)) {
           echo 'New ID: '.$PRODUCT_ID;
        } else {
           echo 'Error: '.$el->LAST_ERROR;
        }

3) $_POST['target'] - это метод POST с значением в скобках, которое взято из значений в форме в файле send.php, которая отправляется на почту.




СОЗДАТЬ СТРАНИЦУ В БИТРИКС БЕЗ ИНФОБЛОКА И ВНЕСТИ ЕЕ В МЕНЮ:

1) зайти в среду разработки -> найти нужную папку с похожим контентом -> скопировать папку и назвать так, как будет называться последний пункт ссылки на эту страницу (например, "info");

2) зайти в админку Битрикс -> Контент -> Страницы сайта -> Добавить элемент;

3) написать название элемента + символьный код элемента (часть ссылки на элемент или, можно сказать, название папки с файлами этой страницы);

4) открыть в среде разработки файл index.php и изменить в нем "ELEMENT_ID", а также изменить текст в "SetTitle" на заголовок страницы;

5) открыть в среде разработки файл section.php и изменить в нем "$sSectionName" на заголовок страницы;

6) открыть в админке Битрикс эту страницу в Страницах сайта и занести в нее нужную информацию. Во вкладке элемент можно создать таблицу, а во вкладе "Подробно" все остальное;

7) затем в админке Битрикс открыть "Файлы и папки" -> найти файл меню, в который нужно добавить пункт. Например, " Меню типа «top»" -> редактировать меню;

8) добавить название нового пункта меню ("Раскрытие информации") и ссылку на него ("/info/") -> Сохранить.




СОЗДАТЬ ПОДСВЕТКУ МЕНЮ В БИТРИКС:

1) зайти в среду разработки -> нужный шаблон с меню -> вставить код и поменять в нем классы:

   <?if (!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED!==true)die();?>

   <?if (!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED!==true)die();

   if (empty($arResult)) return;

   $arMenu = array();
   $first = true;
   foreach($arResult as $itemIndex => $arItem)
   {
	if ($arItem["PERMISSION"] > "D" && $arItem["DEPTH_LEVEL"] == 1)
	{
		$className = '';
		if ($first) {$className .= ' first-item'; $first = false;}
		if ($arItem['SELECTED']) {$className .= ' selected';}
		
		$arItem['CLASS'] = $className;
		$arMenu[] = $arItem;
	}
   }
   $page = $GLOBALS["APPLICATION"]->GetCurPage(true);
   if (empty($arMenu)) return;

   $arMenu[count($arMenu)-1]['CLASS'] .= ' last-item';
   ?>
				
   <ul>				
   <?
   foreach($arMenu as $arItem):
   if($arItem["LINK"].'index.php' != $page) { 
       if (strpos($page, $arItem["LINK"]) === false){ ?>

           <li class="header-top-menu-nav-li"><a href="<?=$arItem["LINK"]?>"><?=$arItem["TEXT"]?></a></li>
   <?
       } else { ?>
           <li class="header-top-menu-nav-li">
               <strong>
                   <a href="<?=$arItem["LINK"]?>"><?=$arItem["TEXT"]?></a>
               </strong>
           </li>
       <? }
   } else { ?>
       <li class="header-top-menu-nav-li active">
           <span><?=$arItem["TEXT"]?></span>
       </li>
   <? }
   endforeach;
   ?>
   </ul>




СОЗДАТЬ СТРАНИЦУ БЕЗ КОМПОНЕНТА НА БИТРИКС:

1) зайти в админку Битрикс -> Контент -> Файлы и папки;

2) нажать на кнопку Добавить -> папку;

3) ввести название раздела (так будет называться часть ссылки на страницу);

4) можно создать пункт меню (рекомендуется это делать, когда страница будет готова);

5) Сохранить (создаться папка и файлы index.php и section.php в нем);

6) скачать созданную папку с файлами со среды разработки;

7) редактировать файл;

8) ЕСЛИ НУЖНО СОЗДАТЬ ССЫЛКИ С ЭТОЙ СТРАНИЦЫ НА ВНУТРЕННИЕ СТРАНИЦЫ, нужно:

	- зайти в админку Битрикс -> Файлы и папки -> найти созданную нами папку -> Добавить -> папку;

	- создать папку -> Название раздела -> Сохранить (создаться папка и файлы index.php и section.php в нем).





Вставка кода в теги:
<h1 itemprop="name"><?=$arResult["NAME"]?></h1> - для вставки заголовка
<?=SITE_TEMPLATE_PATH?> - для вставки автоматически прописываемого пути

Метатеги:
<meta property="og:title" content="<?$APPLICATION->ShowTitle(false);?>"/>
<meta property="og:url" content="http://dinarbitrix.fabuladesign.ru<?=SITE_SERVER_NAME?><?=$APPLICATION->GetCurPage(false);?>" />
<meta property="og:type" content="website"/>
<?$APPLICATION->ShowHead(); /*подключаем head*/?>
<?$APPLICATION->ShowCSS(); /* подключаем стили */ ?>
<?$APPLICATION->ShowPanel(); /*панель админки*/?>
<img src="<?=SITE_TEMPLATE_PATH?>/img/man.jpg" alt="image"> - путь к файлу в битрикс
$APPLICATION->AddHeadString('<meta property="og:image" content="http://'. $_SERVER['SERVER_NAME'] . $arResult['PREVIEW_PICTURE']['SRC'].'"/>'); - вставляется в файл template.php
$APPLICATION->AddHeadString('<meta property="og:description" content="'.ucfirst($arResult['PREVIEW_TEXT']).'"/>'); - вставляется в файл template.php




СОЗДАТЬ ПРИВЯЗКУ HEADER И FOOTER К WORKAREA (Т.Е. СОЗДАТЬ ПЕРВУЮ СТРАНИЦУ НА САЙТЕ):

1) после установки битрикс на хостинг копируем в среду разработки папку bitrix -> templates;

2) копируем папку с дефолтной страницей, которая сейчас отображается на сайте (называется, например, furtunate_blue, где blue - цвет темы сайта);

3) скопированную папку вставляем рядом с дефолтной и переименовываем, например, в fabula;

4) копируем в созданную папку все папки со скриптами, стилями и изображениями, которые необходимы для работы сайта;

5) заходим в index.php, который находится в корне сайта (исходные файлы -> index.php);

6) в том же index.php меняем ссылку на шаблон header в самом верху:
	<?
		require($_SERVER["DOCUMENT_ROOT"]."/bitrix/header.php");
		$APPLICATION->SetTitle("Название организации");
	?>

7) в том же index.php меняем ссылку на шаблон footer в самом низу:
	<?require($_SERVER["DOCUMENT_ROOT"]."/bitrix/footer.php");?>

8) в том же index.php удаляем компонент между 4 и вторым пунктом;

9) через среду разработки заходим в созданную папку fabula -> открываем файл header.php -> копируем туда теги:
	<!DOCTYPE html>, верхнюю часть html, полностью head, верхнюю часть body и весь header из сверстанной вами страницы;

10) через среду разработки заходим в созданную папку fabula -> открываем файл footer.php -> копируем туда теги:
	footer, нижнюю часть body, html и все остальные теги, которые находятся в футере и под футером;

11) зайти в админку битрикс -> Настройки -> Настроки продукта -> Сайты -> Список сайтов -> щелкнуть по id созданного нами сайта;

12) в среде разработки зайти в папку fabula -> файл description.php -> в файле изменить информацию так, чтобы получилось:
	<?if(!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED!==true)die();?>
	<?
	$arTemplate = Array(
		"NAME"=>"Название организации", 
		"DESCRIPTION"=>"Название организации", 
	);?>

13) в параметрах сайта найти пункт Шаблон сайта -> в пункте таблицы "Шаблон" и выбрать название шаблона, который указали в файле description.php ("Название организации");

14) в настройках продукта Битрикс выбрать Автокеширование -> Очистка фалов кеша -> нажать на пункт "Все" -> Начать;

15) обновить страницу сайта.





СОЗДАНИЕ КОМПОНЕНТА МЕНЮ:

1) зайти в админку Битрикс -> Контент -> Файлы и папки -> Добавить -> Добавить меню;

2) выбрать тип меню -> ввести названия и ссылки в меню -> Сохранить;

3) зайти на сайт -> меню Битрикс -> Изменить страницу -> в Визуальном редакторе -> на правой стороне выдвинуть меню -> Служебные -> Навигация -> Меню;

4) перетащить компонент Меню на страницу -> нажать на компонент Меню на странице;

5) выбрать шаблон компонента (он называется так, как выбранный тип меню во 2 пункте) -> указать Основные параметры и Дополнительные настройки -> Сохранить;

6) Сохранить изменения на странице сайта -> открыть режим разработчика и скопировать php-код компонента;

7) зайти в среду разработки на измененную страницу и выгрузить старую версию этой страницы;

8) в среде разработки зайти в файл header.php или другой файл, в который вставляем меню и вставить скопированный php-код;

9) чтобы создать недефолтный шаблон компонента, необходимо зайти в созданную нами папку fabula -> components -> bitrix -> menu -> скопировать папку с меню (название указано в php-коде, который вставили в файл в предыдущем пункте);

10) переименовать скопированную папку и в php-коде файла указать другое название папки с шаблоном компонента.






СДЕЛАТЬ ШАБЛОН КОМПОНЕНТА НА БИТРИКС:

1) войти в админку сайта;

2) в типах инофоблоков выбрать нужный инфоблок (например, Новости) -> добавить в него инфоблок;

3) войти в созданный инфоблок и во вкладке "Свойства" прописать свойства инфоблока (название любыми буквами и символьный код большими английскими буквами),
   которые будут выводится на странице (логотип, цена, условия и т.д.);

4) если свойство занимает несколько строк и состоит из нескольких тегов, то нужно применять тип свойства html/текст,
   если нужно вывести на страницу изображение, то выбираем свойство типа "Файл",
   если свойство состоит из одного тега, то применить строку, если свойство нужно вставлять в тег <li>, то ему нужно присвоить множественное значение,
   если свойство обязательное, то ему нужно присвоить обязательное значение.

5) перейти на страницу сайта;

6) панель управления Битрикс на сайте -> Изменить страницу -> В визуальном редакторе -> добавить на страницу Список новостей (именно список новостей, если выбраны Новости типом инфоблока);

7) в среде разработки скопировать компонент списка новостей с этой страницы и добавить его на страницу, на которой будет выводится компонент;

8) скопировать папку news (если компонент из новостей), которая находится в Исходные файлы -> bitrix -> components -> bitrix -> news.list;

9) вставить эту папку в созданную ранее нами папку (например, в папку fabula) и переименовать вставленную папку на news.list;

10) открыть в переименованной папке файл template.php, удалить из него все, кроме цикла <?php foreach($arResult["ITEMS"] as $arItem):?> -> вставить свой html-код;

11) найти повторяющийся html-код и поместить над ним открывающуюся скобку <?php foreach($arResult["ITEMS"] as $arItem):?>, а под ним
    закрывающуюся скобку <?php endforeach;?>;

12) после создания информационного блока (пункты 2 - 4) в разделе Контент админки создасться папка с названием типа инфоблока, внутри которой будет находится файл,
    названный, как инфоблок;

13) Заходим в этот файл в админке -> Добавить свойства -> Сохранить;

14) зайти в среду разработки -> в папке new.list открыть файл template.php;

15) теперь нужно вставить код в шаблон, для вывода значений свойств на сайт;

16) если нужно вывести изображение в атрибут src тега img вставить код: <? echo CFIle::GetPath($arItem["PROPERTIES"]["LOGOTYPE"]["VALUE"]);?>.
    Например, <img src="<? echo CFIle::GetPath($arItem["PROPERTIES"]["СВОЙСТВО"]["VALUE"]);?>" class="main-block-gazprombank-offers-menu-tbody-tr-td-img" alt="image" />,
    где $arItem - название массива в методе foreach, PROPERTIES - список всех свойств, СВОЙСТВО - символьный код свойства, которое вы указали в свойствах инфоблока
    (например, LOGOTYPE), VALUE - значение свойства;

17) если нужно по клику выводить на экран текстовый файл или другие ФАЙЛЫ ДЛЯ ЧТЕНИЯ ИЛИ ПРОСМОТРА, то в атрибут href тега a нужно вставить код: 
    <?=CFile::GetPath($arResult["PROPERTIES"]["TEXT_FILES"]["VALUE"]);?>".
    Например, <a href="<?=CFile::GetPath($arResult["PROPERTIES"]["TEXT_FILES"]["VALUE"]);?>".
    Если нужно вывести МНОЖЕСТВЕННОЕ свойство с текстовыми или другими файлами на страницу для чтения или просмотра, то в соответствующем цикле перебора множественных
    свойств написать: <?=CFile::GetPath($arResult["PROPERTIES"]["TYPE_FILES"]["VALUE"][$i]);?>.
    Например, <a href="<?=CFile::GetPath($arResult["PROPERTIES"]["TYPE_FILES"]["VALUE"][$i]);?>".

18) если нужно вывести обычную строку, а также дату, нужно вставить в тег, который будет выводить информацию на экран код: <?php echo $arItem["PROPERTIES"]["СВОЙСТВО"]["VALUE"];?>.
    Например, <p class="main-block-gazprombank-offers-menu-tbody-tr-td-p">
                  <?php echo $arItem["PROPERTIES"]["CREDIT"]["VALUE"];?>
              </p>

19) если нужно вывести строку с html-кодом нужно между тегами вставить код: <?php echo htmlspecialchars_decode($arItem["PROPERTIES"]["СВОЙСТВО"]["VALUE"]["TEXT"])?>;

20) если нужно вывести строку в всплывающем окне типа fancybox, то нужно вставить в атрибуты тегов data-fancybox="", data-src="" и в идентификатор id=""
    после названия и идентификатора код: <? echo $arItem["ID"]; ?>;

21) вывести заголовок элемента инфоблока можно при помощи кода: <?php echo $arItem["NAME"];?>, который вставляют внутрь тега;

22) если нужно вывести множественное свойство, необходимо вставить цикл for с проверкой на пустую строку следующего содержания:
    <?php for($i=0; $i <= count($arItem["PROPERTIES"]["СВОЙСТВО"]["VALUE"]); $i++ ) { ?>
         <?php if ($arItem["PROPERTIES"]["СВОЙСТВО"]["VALUE"][$i] != '') { ?>
         <li class="showcase-description-col-ul-li">
             <span class="showcase-description-col-ul-li-span">
                  <?php echo $arItem["PROPERTIES"]["СВОЙСТВО"]["VALUE"][$i];?>
             </span>
         </li>
         <?php } ?>
    <?php } ?>
    где count() - количество элементов в массиве, $arItem - первый массив, который должен быть таким же как и массив в foreach. Если в foreach $arItem, то и в циклах
    внутри него тоже должен быть $arItem.
    <?php if ($arItem["PROPERTIES"]["СВОЙСТВО"]["VALUE"][$i] != '') { ?> - проверка значения на пустую строку. Если строка пустая, свойство не выведется.
    <?php echo $arItem["PROPERTIES"]["СВОЙСТВО"]["VALUE"][$i];?> - само значение.

23) сохранить страницу и почистить кеш в админке Битрикс.

24) чтобы добавить свойства в действующий инфоблок с элементами, нужно повторить операции, указанные в пунктах 3, 4 этой главы + зайти в раздел над инфоблоками и
    найти в нем нужный инфоблок -> войти в нужный элемент -> Настройки (шестеренка) -> выделить справа и слева нужные вкладки -> перенести слева направо нужное
    свойство элемента;

25) если свойство в шаблон не выводится, то необходимо зайти в среду разработки и открыть файл со страницей -> в компоненте найти строку
    "DETAIL_PROPERTY_CODE" => array("","") -> вставить в первую скобку array знак "*". Например: "DETAIL_PROPERTY_CODE" => array("*","").

26) отключить строку "Возврат к списку" на странице детального просмотра можно в шаблоне файл detail.php заккоментив код:
    <p><a href="<?=$arResult["FOLDER"].$arResult["URL_TEMPLATES"]["news"]?>"><?=GetMessage("T_NEWS_DETAIL_BACK")?></a></p>.






СДЕЛАТЬ СТРАНИЦУ НА БИТРИКС С ДЕТАЛЬНЫМ ОПИСАНИЕМ ПО ССЫЛКЕ ПО ШАБЛОНАМ КОМПОНЕНТОВ НА БИТРИКС:

1) войти в админку сайта;

2) создать в Файлах и папках папку со страницей сайта -> Добавить на нее компонент "Новости";

3) в типах инофоблоков выбрать инфоблок "Новости" -> добавить в него инфоблок и вставить в него свойства, руководствуясь правилами, которые прописаны в
   пунктах 3 и 4 прошлой главы;

4) зайти в среду разработки и загрузить папку со страницей;

5) скопировать полностью дефолтную папку с шаблоном, которая находится по адресу: Исходные файлы -> bitrix -> components -> bitrix -> news -> templates ->
   папку .default нужно скопировать;

6) скопированную папку нужно вставить по адресу: Исходные файлы -> bitrix -> templates -> fabula -> components -> bitrix -> создать папку news -> вставить папку ->
   папку переименовать;

7) в переименованной папке есть две папки. news.list - отвечает за шаблон, через который будет осуществлен переход на страницу детального просмотра, а
   news.detail - отвечает за шаблон, на котором расположена страница детального просмотра;

8) зайти в папку с созданной страницей -> переписать путь к папке, добавив название скопированной и вставленной папки;

9) перейти в админку Битрикс -> Файлы и папки -> созданная нами папка со страницей -> открыть файл в режиме редактирования html -> открыть настройки компонента;

10) выбрать шаблон компонента, тип инфоблока и инфоблок;

11) включить поддержку ЧПУ -> в пункте "Страница детального просмотра" указать код: #ELEMENT_CODE#/ -> Сохранить;

12) перейти в созданный инфоблок, который находится над разделом "Типы инфоблоков" и добавить в него элемент;

13) чтобы по клику открывалась детальная страница нужно войти в папку fabula -> папка компонента -> news.list -> template.php -> вставить в атрибут src тег "a"
    код: <?=$arItem['DETAIL_PAGE_URL']?>;

14) прописать информацию на странице детального просмотра можно 2 способами:
    а) зайти в админке битрикс в элемент шаблона -> вкладка подробно и вставить html-код;
    б) зайти в среду разработки -> папка fabula -> папка news.detail -> template.php.

15) вывести информацию из вкладки "Подробно" в админке Битрикс можно при помощи кода: <?=$arItem['DETAIL_TEXT']?>;

16) если свойство в шаблон не выводится, то необходимо зайти в среду разработки и открыть файл со страницей -> в компоненте найти строку
    "DETAIL_PROPERTY_CODE" => array("","") -> вставить в первую скобку array знак "*". Например: "DETAIL_PROPERTY_CODE" => array("*","");

17) на странице, в строке вызова компонента "SEF_URL_TEMPLATES", указать #ELEMENT_CODE#, если он не указан. Например:

    "SEF_URL_TEMPLATES" => Array("detail"=>"#ELEMENT_CODE#/","news"=>"","section"=>"").

18) если детальная страница не выводится, то произвести действия из следующей главы:

    "НАСТРОИТЬ СТРАНИЦУ НА БИТРИКС С ДЕТАЛЬНЫМ ОПИСАНИЕМ ПО ССЫЛКЕ ПО КОПИИ ШАБЛОНА КОМПОНЕНТОВ НА БИТРИКС".






НАСТРОИТЬ СТРАНИЦУ НА БИТРИКС С ДЕТАЛЬНЫМ ОПИСАНИЕМ ПО ССЫЛКЕ ПО КОПИИ ШАБЛОНА КОМПОНЕНТОВ НА БИТРИКС:

1) сделать все тоже самое, что в предыдущей главе, кроме добавления инфоблока на страницу через админку битрикс, т.е., скопировать готовый вызов компонента на новую
   
   страницу и переписать путь к папке с шаблоном, "IBLOCK_ID" и изменить url на название папки со страницей в пункте вызова компонента "SEF_FOLDER";

2) зайти в админку битрикс -> Настройки -> Обработка адресов -> Правила обработки;

3) создать новую запись и вставить в нее условие #^/название папки со страницей/#, компонент (выберет сам битрикс (bitrix:news или bitrix:catalog и т.д.)),

   прописать файл /название папки со страницей/index.php -> Сохранить.







НАСТРОЙКА ВЫВОДА ТОЛЬКО ОПРЕДЕЛЕННОГО БЛОКА ПРИ ЗАДАННОМ УСЛОВИИ В ШАБЛОНЕ КОМПОНЕНТА:

1) зайти в админку Битрикс -> Контент -> Инфоблоки -> свойства инфоблока;

2) добавить свойство типа "Список";

3) в нем указать Вид в умном фильтре и Внешний вид флажки -> Значения списка -> XML_ID (например, yes) и Значение (например, да);

4) Показывать на странице списка элементов и Показывать на детальной странице элемента;

5) в админке Битрикс заходим в элемент инфоблока, в котором нужно скрыть блок -> поставить галочку на созданном свойстве;

6) в среде разработки зайти в шаблон компонента инфоблока с созданным свойством и поместить блок, который не нужно выводить в определенном элементе в php-код:
   
   <?php if($arResult["PROPERTIES"]["FINAL_COMPETITION"]["VALUE"] != "да"):?>
   блок
   <?php else:?>

   <?php endif;?>






ПРОВЕРКА МАССИВА НА ВЫВОД ЭЛЕМЕНТОВ:

	Чтобы проверить, почему не выводятся элементы на страницу, нужно:

1) зайти в среду разработки -> шаблон компонента;

2) в цикле foreach указать: print_r($arItem["PROPERTIES"]). Например:
   <?php foreach($arResult["ITEMS"] as $arItem):
      print_r($arItem["PROPERTIES"]);
   ?>






ФИЛЬТР ПО ФОРМЕ НА PHP:

1) в среде разработки создать несколько тегов input с id для Jquery можно с label, но без тега form;

2) зайти в среду разработки с формой form и заменить его на тег div;

3) создать над кнопки input type="submit" тег form и обернуть в него этот input type="submit";

4) на теге form прописать атрибуты action="" и method="get";

5) в форме создать теги input type="hidden"(невидимые input) и присвоить им id для кода Jquery. Эти input нужны будут для кода php, чтобы в через них получить число,
   а не строку;

6) нужно прописать в input type="hidden" атрибут name="" для php-кода;

7) над вызовом компонента с input type="hidden" нужно вставить фильтр на php следующего содержания:
   <?php
    $summ_credit = htmlentities($_GET['name из первого input type="hidden"']);
    $time_credit = htmlentities($_GET['name из второго input type="hidden"']);
    $GLOBALS['arrFilter'] = array(
        'LOGIC' => 'AND',
        ">=PROPERTY_SUMM1" => $summ_credit,
        ">=PROPERTY_TIME_CREDIT" => $time_credit
    );
    ?>

8) в Jquery в функции function(event, ui) прописать код:
   $( "#amount" ).val( ui.value.toLocaleString('ru-RU') + "символ" ); - код для input, который выводится на экран со значениями, переведенными в строку
   (разделение числа пробелом каждые 3 символа + прибавление символа на конце);
   $( "#amout_clear" ).val(ui.value); - код для input, который передается коду на php в числовом типе.







ВЫВОД МИНИМАЛЬНОГО ЗНАЧЕНИЯ СВОЙСТВА В ТЕГЕ INPUT ЧЕРЕЗ КОД JQUERY ПРИ ПОМОЩИ PHP-КОДА:

1) в среде разработки зайти в место расположение кода Jquery и вставить на ним php-код:
   <?php
   $arSelect = Array("ID", "IBLOCK_ID", "NAME", "DATE_ACTIVE_FROM","PROPERTY_*");
   $arFilter = Array("IBLOCK_ID" => НОМЕР ИНФОБЛОКА С НУЖНЫМ СВОЙСТВОМ, "ACTIVE_DATE"=>"Y", "ACTIVE"=>"Y");
   $res = CIBlockElement::GetList(Array("PROPERTY_СВОЙСТВО" => "asc"), $arFilter, false, Array("nPageSize"=>КОЛИЧЕСТВО ВЫВОДИМЫХ ЗНАЧЕНИЙ(сейчас нужно 1)), $arSelect);
   while($ob = $res->GetNextElement()){
    $arProps = $ob->GetProperties();
       $min_summ = $arProps["СВОЙСТВО"]["VALUE"];
       break;
   }
   ?>

2) в коде Jquery вставить в значении echo <?php $min_summ;?> Например:
   value: <?php echo $min_summ?>,
   min: <?php echo $min_summ?>.







ПРИВЯЗКА ЭЛЕМЕНТОВ ИНФОБЛОКА К ЭЛЕМЕНТУ

	Если нужно, чтобы на странице отображались только определенные элементы инфоблока, необходимо их привязать к определенному элементу инфоблока,
который отвечает за вывод информации на нужную нам страницу. Например, элемент инфоблока с детальным описанием, как в предыдущей главе.

1) зайти в админку Битрикс -> Контент -> Инфоблоки -> выбрать нужный инфоблок с необходимыми элементами -> Свойства -> добавить свойство, например,
   "Кредитная организация" -> тип "Привязка к элементу" -> галка в обязательный -> символьный код;

2) перейти к элементам этого инфоблока -> Добавить необходимые элементы с описанием продукта -> выбрать элемент другого инфоблока, к которому необходимо привязать
   элемент -> сохранить;

3) перейти в среду разработки -> страница, на которой выводится компонент -> компонент, в котором нужно вывести привязку к элементам -> над этим компонентом вставить
   код: <?
    $GLOBALS["arrFilter"] = array();
    $GLOBALS["arrFilter"]["PROPERTY"]["PROPERTY_СВОЙСТВО"]["VALUE"] = ID ЭЛЕМЕНТА;
    ?>

    СВОЙСТВО - код свойства инфоблока, в котором содержатся элементы, которые нужно выводить в другом инфоблоке. Выведет только конкретные элементы;
    ID ЭЛЕМЕНТА - код элемента инфоблока, к которому происходит привязка элементов другого инфоблока.

    либо вставлять универсальный id:
    <?
    $GLOBALS["arrFilter"] = array();
    $GLOBALS["arrFilter"]["PROPERTY_СВОЙСТВО"] = $arResult["ID"];
    ?>

    $arResult["ID"] - универсальный код свойства инфоблока, в котором содержатся элементы, которые нужно выводить в другом инфоблоке.
    Выведет все элементы, привязанные к элементу этого инфоблока;

4) в среде разработки, в компоненте, над которым написан фильтр из пункта 3, в свойство "FILTER_NAME" => "" вставить название фильтра. В данном случае arrFilter.
   Например, "FILTER_NAME" => "arrFilter".

5) Сохранить изменения и очистить кеш.







ВЫВОД ЭЛЕМЕНТОВ ТОЛЬКО С ОПРЕДЕЛЕННЫМИ СВОЙСТВАМИ НА НУЖНУЮ СТРАНИЦУ ИЛИ СТРАНИЦЫ:

	Для того, чтобы вывети на определенную станицу элемент инфоблока по флажку, например "Вывести на главную", нужно:
1) зайти в админку битрикс -> инфоблок с нужными элементами -> свойства инфоблока -> создать свойство типа Список, например MAIN_PAGE;

2) войти в настройки свойства, нажав на три точки справа от свойства -> вид в умном фильтре "Флажки" -> внешний вид "Флажки" ->
   Количество строк (для внешнего вида "список"): -> 1; -> значения списка: -> XML_ID -> yes; значение -> "да"; Умол. -> не ставить -> Сохранить;

3) зайти в среду разработки -> вставить вызов компонента на страницу -> над вызовом компонента вставить фильтр:
   <?
   $GLOBALS["arrFilter"] = array();
   $GLOBALS["arrFilter"]["PROPERTY_MAIN_PAGE"]["VALUE"] = ["YES"];
   ?>
   MAIN_PAGE - это название свойство инфоблока из пункта 1 этой главы;
   YES - название XML_ID из пункта 2 в высоком регистре.

   Можно тоже самое сделать так:
   <?
   $GLOBALS["arrFilter"] = array();
   $GLOBALS["arrFilter"]["PROPERTY_MAIN_PAGE_VALUE"] = "да";
   ?>
   MAIN_PAGE - это название свойство инфоблока из пункта 1 этой главы;
   VALUE - значение свойства инфоблока;
   YES - название значения из пункта 2.

4) в пункте FILTER_NAME вызова компонента в "" прописать название фильтра. В данном случае arrFilter;

5) в пункте NEWS_COUNT вызова компонента указать в "" число выводимых элементов на страницу. Например, 3;

6) проставить в элементах инфоблока, которые нужно вывести на страницу, галочку на флажок со свойством из пункта 1 этой главы -> Сохранить.







ВСТАВИТЬ ПАГИНАЦИЮ НА СТРАНИЦУ:

1) зайти в среду разработки -> шаблон с информацией для вывода на страницу сайта -> в нем есть массив <?=$arResult["NAV_STRING"]?>;

2) скопировать <?=$arResult["NAV_STRING"]?> и вставить в конец шаблона -> сохранить;

3) в среде разработки загрузить папку с пагинацией, которая находится в папке bitrix -> components -> bitrix -> system.pagenavigation;

4) в папке fabula создать папку system.pagenavigation и скопировать в нее только папку .default, которая лежит в папке components -> templates;

5) сбросить кеш -> перезагрузить страницу -> должна выйти пагинация на странице.







ОТОБРАЗИТЬ НА СТРАНИЦЕ ОДИН ВЫЗОВ КОМПОНЕНТА ИЗ ДВУХ И БОЛЕЕ:

	Для этого нужно сделать Get-запрос. GET-ЗАПРОС ПРОПИСЫВАЮТ НА СТРАНИЦЕ, А НЕ В ШАБЛОНЕ КОМПОНЕНТА. ИНАЧЕ ОН НЕ СРАБОТАЕТ.

1) заходим в среду разработки и находим нужную страницу;

2) <?php if ($_GET["n"]) { ?>

   Код вызова компонента, который нужно выводить только по специальной ссылке

   <?php } else { ?>

   Код вызова компонента, который виден всем

   <?php } ?>

3) в адресной строке прописать http://volgrazvitie.ru/?&n=1, где "n" - это символ из get в условии, а "?&n=1" - само условие.

4) если, с "n" не выводится на страницу компонент, проблема может быть в том, что такой символ уже есть в другом условии, либо
   
   выбран не тот вызов компонента;

5) если символ "n" уже используется, то нужно поставить в условие другой символ или символы. Например, <?php if ($_GET["new"]) { ?>.
 
   В этом случае, в адресной строке тоже нужно изменить символ. Например, http://volgrazvitie.ru/?clear_cache=Y&new=1#.


 




ПОДГРУЗИТЬ НА СТРАНИЦУ ЭЛЕМЕНТЫ ПО КЛИКЕ НА САБМЕНЮ НА ДЕТАЛЬНОЙ СТРАНИЦЕ ШАБЛОНА:

1) зайти в среду разработки в созданную папку с шаблоном, которая находится в папке news, и вставить сразу после "Array(" строку: "ELEM_TYPE" => $_GET["type"],

   , где type - название GET-параметра;

2) зайти в шаблон с сабменю и указать в тегах "a" ссылки типа: "./?type=potreb_credit".







СДЕЛАТЬ ПОДСВЕТКУ ПУНКТОВ САБМЕНЮ С GET-ПАРАМЕТРОМ:

1) если папка с вызовом компонента происходит из папки new, то зайти в файл detail.php и добавить в нем строку: "ELEM_TYPE" => $_GET["type"],  сразу после "Array(";

2) если папка с вызовом компонента находится в другом месте, то код "ELEM_TYPE" => $_GET["type"], указать в вызове этого компонента сразу после "Array(";

2) над вызовом компонента указать условия, из-за которых компонент должен выводится. Например, 

   <?php if ($arParams["ELEM_TYPE"] == "potreb_credit") { ?>

   вызов компонента

   <?php } else { ?>

   вызов того же компонента

   <?php } ?>

3) зайти в шаблон с сабменю и вставить над его пунктами условия: <?php if ($arParams["ELEM_TYPE"] == "potreb_credit"){ ?> пункт меню с измененными стилями

  <?php } else { ?> пункт меню <?php } ?>.







ПРИМЕНИТЬ ДРУГОЙ ФАЙЛ СТИЛЕЙ НА НУЖНОЙ СТРАНИЦЕ:

1) зайти в папку с файлом index.php нужной страницы и открыть файл;

2) внести между require($_SERVER["DOCUMENT_ROOT"]."/bitrix/header.php") и знаком ?> код $APPLICATION->SetAdditionalCSS("/пака сайта/css/style.css"). Например:
	<?
	require($_SERVER["DOCUMENT_ROOT"]."/bitrix/header.php");
	$APPLICATION->SetAdditionalCSS("/congress/css/style.css");
	?>



ПРИМЕНИТЬ ФАЙЛ СТИЛЕЙ В ШАБЛОНЕ

1) зайти в файл header.php сайта;

2) записать между тегами head код: <?$APPLICATION->ShowHead();?>;

3) в этот код внести код: $APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH."/css/style.css"). Например:
	<?$APPLICATION->ShowHead();
	$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH."/css/style.css");
	?>

4) при необходимости после .css можно добавить .map.



ИЗМЕНИТЬ ШИРИНУ ЦЕНЫ В БИТРИКС

1) зайти в админку битрикс;

2) зайти в настройки битрикс;

3) нажать на "Валюты" - "Список валют";

4) нажать на закладку "Языковые настройки";

5) Изменить как нужно пункты: "Строка формата для вывода валюты" и "Количество десятичных знаков".



СОЗДАТЬ СВОЙСТВО В БИТРИКС:

1) зайти в админку битрикс;

2) зайти в контент - инфоблоки - типы инфоблоков - каталоги - товары;

3) в нужном инфоблоке щелкнуть по трем полоскам слева и выбрать пункт "Свойства" - "Добавить свойства";

4) в настройках ствойства указать тип свойства "Список" + поставить галочку, если не стоит, в пункте "Свойство активно" +
   написать название свойства русскими буквами в обычном регистре + символьный код английскими буквами в высоком регистре(допускается нижнее подчеркивание) +
   поставить галочку в пункте "Показывать на странице редактирования элемента" + Вид в умном фильтре - "Флажки" + Внешний вид - "Флажки";

5) в Значении списка указать слева-направо: в первой строке "yes"; во второй "да".



ДЛЯ ТОГО, ЧТОБЫ СВОЙСТВО ЗАРАБОТАЛО НУЖНО:

1) зайти в редактор кода в файл, в котором написана страница со списком товаров, услуг (например, index.php);

2) удалить html-код только со статичным списком товаров или услуг, кроме тегов <section> и добавить php-код следующего содержания в КАЖДЫЙ пункт со списком товаров:

<?
    //global $arrFilter1; 
    //$arrFilter1 = array( "PROPERTY_NOVINKA"=>"да", array("LOGIC" => "OR", array("PROPERTY_KHIT_PRODAZH"=>"да")));
    $GLOBALS['arrFilter2'][] = array(
        "PROPERTY_POPULAR_VALUE" => "да"
    );
?> - (Выводит все товары свойства по списку) где POPULAR является свойством инфоблока, а VALUE - типом фильтрации по списку. Его можно узнать в Настройках свойств элементов (Контент - Инфоблоки - Типы инфоблоков - Справочники - Проекты)

3) После пункта 2 нужно добавить элемент через редактор страницы битрикс, который находится на панели управления сайтом и выставить ему нужные параметры - Сохранить.
   Если нужно создать новый шаблон, то копируем соответствующую папку в bitrix:catalog.section и прописываем ее название. Например, вместо .default сделаем furniture.

        <?$APPLICATION->IncludeComponent(
	"bitrix:catalog.section", 
	".default", 
	array(
		"ACTION_VARIABLE" => "action",
		"ADD_PICT_PROP" => "-",
		"ADD_PROPERTIES_TO_BASKET" => "Y",
		"ADD_SECTIONS_CHAIN" => "N",
		"ADD_TO_BASKET_ACTION" => "ADD",
		"AJAX_MODE" => "N",
		"AJAX_OPTION_ADDITIONAL" => "",
		"AJAX_OPTION_HISTORY" => "N",
		"AJAX_OPTION_JUMP" => "N",
		"AJAX_OPTION_STYLE" => "Y",
		"BACKGROUND_IMAGE" => "-",
		"BASKET_URL" => "/personal/basket.php",
		"BROWSER_TITLE" => "-",
		"CACHE_FILTER" => "N",
		"CACHE_GROUPS" => "Y",
		"CACHE_TIME" => "36000000",
		"CACHE_TYPE" => "A",
		"COMPATIBLE_MODE" => "Y",
		"CONVERT_CURRENCY" => "N",
		"CUSTOM_FILTER" => "",
		"DETAIL_URL" => "",
		"DISABLE_INIT_JS_IN_COMPONENT" => "N",
		"DISPLAY_BOTTOM_PAGER" => "Y",
		"DISPLAY_COMPARE" => "N",
		"DISPLAY_TOP_PAGER" => "N",
		"ELEMENT_SORT_FIELD" => "sort",
		"ELEMENT_SORT_FIELD2" => "id",
		"ELEMENT_SORT_ORDER" => "asc",
		"ELEMENT_SORT_ORDER2" => "desc",
		"ENLARGE_PRODUCT" => "STRICT",
		"FILTER_NAME" => "arrFilter2",
		"HIDE_NOT_AVAILABLE" => "N",
		"HIDE_NOT_AVAILABLE_OFFERS" => "N",
		"IBLOCK_ID" => "4",
		"IBLOCK_TYPE" => "catalog",
		"INCLUDE_SUBSECTIONS" => "A",
		"LABEL_PROP" => array(
		),
		"LAZY_LOAD" => "N",
		"LINE_ELEMENT_COUNT" => "3",
		"LOAD_ON_SCROLL" => "N",
		"MESSAGE_404" => "",
		"MESS_BTN_ADD_TO_BASKET" => "В корзину",
		"MESS_BTN_BUY" => "Купить",
		"MESS_BTN_DETAIL" => "Подробнее",
		"MESS_BTN_SUBSCRIBE" => "Подписаться",
		"MESS_NOT_AVAILABLE" => "Нет в наличии",
		"META_DESCRIPTION" => "-",
		"META_KEYWORDS" => "-",
		"OFFERS_LIMIT" => "5",
		"PAGER_BASE_LINK_ENABLE" => "N",
		"PAGER_DESC_NUMBERING" => "N",
		"PAGER_DESC_NUMBERING_CACHE_TIME" => "36000",
		"PAGER_SHOW_ALL" => "N",
		"PAGER_SHOW_ALWAYS" => "N",
		"PAGER_TEMPLATE" => ".default",
		"PAGER_TITLE" => "Товары",
		"PAGE_ELEMENT_COUNT" => "24",
		"PARTIAL_PRODUCT_PROPERTIES" => "N",
		"PRICE_CODE" => array(
			0 => "BASE",
		),
		"PRICE_VAT_INCLUDE" => "Y",
		"PRODUCT_BLOCKS_ORDER" => "price,props,sku,quantityLimit,quantity,buttons",
		"PRODUCT_ID_VARIABLE" => "id",
		"PRODUCT_PROPS_VARIABLE" => "prop",
		"PRODUCT_QUANTITY_VARIABLE" => "quantity",
		"PRODUCT_ROW_VARIANTS" => "[{'VARIANT':'3','BIG_DATA':false},{'VARIANT':'3','BIG_DATA':false},{'VARIANT':'3','BIG_DATA':false},{'VARIANT':'3','BIG_DATA':false},{'VARIANT':'3','BIG_DATA':false},{'VARIANT':'3','BIG_DATA':false}]",
		"PRODUCT_SUBSCRIPTION" => "Y",
		"RCM_PROD_ID" => $_REQUEST["PRODUCT_ID"],
		"RCM_TYPE" => "personal",
		"SECTION_CODE" => "",
		"SECTION_ID" => "",
		"SECTION_ID_VARIABLE" => "SECTION_ID",
		"SECTION_URL" => "",
		"SECTION_USER_FIELDS" => array(
			0 => "",
			1 => "",
		),
		"SEF_MODE" => "N",
		"SET_BROWSER_TITLE" => "Y",
		"SET_LAST_MODIFIED" => "N",
		"SET_META_DESCRIPTION" => "Y",
		"SET_META_KEYWORDS" => "Y",
		"SET_STATUS_404" => "N",
		"SET_TITLE" => "Y",
		"SHOW_404" => "N",
		"SHOW_ALL_WO_SECTION" => "N",
		"SHOW_CLOSE_POPUP" => "N",
		"SHOW_DISCOUNT_PERCENT" => "N",
		"SHOW_FROM_SECTION" => "N",
		"SHOW_MAX_QUANTITY" => "N",
		"SHOW_OLD_PRICE" => "N",
		"SHOW_PRICE_COUNT" => "1",
		"SHOW_SLIDER" => "Y",
		"SLIDER_INTERVAL" => "3000",
		"SLIDER_PROGRESS" => "N",
		"TEMPLATE_THEME" => "blue",
		"USE_ENHANCED_ECOMMERCE" => "N",
		"USE_MAIN_ELEMENT_SECTION" => "N",
		"USE_PRICE_COUNT" => "N",
		"USE_PRODUCT_QUANTITY" => "N",
		"COMPONENT_TEMPLATE" => ".default",
		"PROPERTY_CODE_MOBILE" => array(
		)
	),
	false
);?>

4) нужно ОБЯЗАТЕЛЬНО в каждом коде, который вставлятется в разные пункты с товарами поменять название фильтра (arrFilter) на другой. Например, на (arrFilter2, arrFilter3 и т.д.). Внимание, таких названий в php-коде 2;

5) затем нужно зайти в админку битрикс, в пункт "Магазин" (слева, где Настройки и Контент) - "Товары" - "Разделы" - выбрать нужную папку по типам товаров или услуг + удалить в поиске путь с названием раздела и вставить название товара или услуги;

6) войти в карточку элемента товара или услуги и поставить галочку в пункте, где указано русское название свойства товара.





ВЫВЕСТИ ФОН БЛОКА ЧЕРЕЗ ВЕРСТКУ:

1) зайти в среду разработки -> найти нужный шаблон и нужный тег в шаблоне;

2) вставить в тег следующий код: style="background-image: url('<?=CFile::getPath($arResult['PROPERTIES']['НАЗВАНИЕ СВОЙСТВА']['VALUE']);?>');";

3) сохранить.






КАК НАСТРОИТЬ КОМПОНЕНТ БИТРИКС НА САЙТЕ:

1) Заходим в битрикс, потом на нужную страницу сайта;

2) В панели битрикс нажимаем на "Изменить страницу";

3) В сплывающем окне выбираем нужную часть страницы;

4) Выбираем нужный компонент в правой сабменюшке (например, компонент "Элементы раздела");

5) Открываем параметры компонента;

6) Выбираем шаблон компонента (из которого будет подтягиваться компонентом html-разметка);

7) Выбираем тип инфоблока (в нем хранятся инфоблоки);

8) Выбираем инфоблок;

9) В пункте "Источники данных" указать название массива (у одного и того же компонента а одной странице должны быть разные названия массивов (например: arrFilter, arrFilter2));

10)  В пункте "Источники данных" также указать, что показывать нужно только элементы "активных подразделов";

11) В пункте "Внешний вид" указать количество элементов на странице; количество элементов, выводимых на одной строке таблицы;

12) В случае, если при клике на элементы компонента будет происходить переход на другую страницу, нужно в пункте "Управление адресами страниц" включить поддержку ЧПУ;

13) В пункте "Настройки постраничной навигации" указать, нужно ли выводить навигацию иил нет. Если да, то где (ввреху или внизу). Если нет, то нужно снять все галки в этом пункте;

14) В пункте "Специальные настройки" включить режим совместимости, если не включен.



ЕСЛИ НУЖНО, ЧТОБЫ ТОВАРЫ ВЫВЕЛИСЬ ПО ID РАЗДЕЛА, НУЖНО:

1) записать над компонентом код:
		    <?
                        //global $arrFilter1; 
                        //$arrFilter1 = array( "PROPERTY_NOVINKA"=>"да", array("LOGIC" => "OR", array("PROPERTY_KHIT_PRODAZH"=>"да")));
                        $arrFilter = array(
                            "SECTION_ID"=>11
                        );
                    ?>  - где SECTION_ID - вывод по id, а число - номер идентификатора раздела.

2) id секций нужно смотреть в Справочники -> Папка со всеми секциями сайта, которые находятся в над инфоблоками.




СОЗДАТЬ МНОЖЕСТВЕННОЕ СВОЙСТВО И ВЫВЕСТИ ЕГО В ЗНАЧЕНИЯХ СВОЙСТВ ЭЛЕМЕНТА:

1) зайти в админку Битрикс;

2) Контент -> Инфоблоки -> Типы инфоблоков -> Справочники -> нужный инфоблок;

3) В Свойствах указать наименование нового свойства, его идентификатор, а также галки на пунктах "Активность" и "Множественное", например VIDEO, -> Применить;

4) Нажать на троеточие -> поставить галочки на пунктах: "Выводить поле для описания значения" и "Показывать на странице редактирования элемента" -> Сохранить;

5) Зайти на страницу элемента (Контент -> Справочники -> нужный элемент) -> Настройки -> в Полях формы выбрать поля "Доступные вкладки" и "Вкладки";

6) в поле "Доступные поля" выбрать созданное свойство -> нажать на стрелку, которая переместит свойство в поле "Выбранные поля";

7) в Общих настройках установить галку в пункте "Установить данные настройки по умолчанию для всех пользователей" -> Сохранить -> Применить.





ВЫВЕСТИ МНОЖЕСТВЕННОЕ СВОЙСТВО ИНФОБЛОКА С ОПИСАНИЕМ:

1) для этого нужно через NetBeans найти шаблон компонента и вставить туда код вывода, например, строчного свойства:

	<div class="object-item-addition">

            <?php for($i=0; $i <= count($arResult["PROPERTIES"]["ADDPRICE"]["VALUE"]); $i++ ) { ?>
                
            <?php if ($arResult["PROPERTIES"]["ADDPRICE"]["DESCRIPTION"][$i] != '') { ?>

            <?php echo $arResult["PROPERTIES"]["ADDPRICE"]["DESCRIPTION"][$i];?>: <strong><?echo $arResult["PROPERTIES"]["ADDPRICE"]["VALUE"][$i];?></strong>
            
            <?php } ?>

            <?php } ?>

        </div>

2) <?php for($i=0; $i <= count($arResult["PROPERTIES"]["ADDPRICE"]["VALUE"]); $i++ ) { ?> - цикл применяется только к множественным свойствам;

3) count() - количество элементов в массиве;

4) $arResult["PROPERTIES"]["ADDPRICE"]["VALUE"] - массив массивов, в котором:

	а) $arResult - первый массив (общий массив);

	б) "PROPERTIES" - массив, в котором находятся свойства (общий массив);

	в) "ADDPRICE" - массив-свойство, в котором хранятся значения этого свойства (свойство, которе задается пользователем);

	г) "VALUE" - массив значений конкретного свойства, которые записаны в различные элементы выводимые на страницу (общий массив);

	д) [$i] - идентификатор нужного значения массива.

5) $arResult["PROPERTIES"]["ADDPRICE"]["DESCRIPTION"][$i] - дополнительная строка. Например, "Стоимость VIP-кабины";

6) if ($arResult["PROPERTIES"]["ADDPRICE"]["DESCRIPTION"][$i] != '') - если дополнительная строка не пустая, то выполнить код внутри оператора.
   Это необходимо, чтобы на страницу не выходила пустая строка. Например, если после $arResult["PROPERTIES"]["ADDPRICE"]["DESCRIPTION"][$i];?> стоит знак ":",
   то он выведется на экран, если не поставить логический оператор if else;

7) <?php echo $arResult["PROPERTIES"]["ADDPRICE"]["DESCRIPTION"][$i];?>: <strong><?echo $arResult["PROPERTIES"]["ADDPRICE"]["VALUE"][$i];?></strong> - вывод
   дополнительной строки со значением на экран.





СОЗДАТЬ ВЫВОД ТЕКСТОВЫХ ФАЙЛОВ НА СТРАНИЦУ С ПРОВЕРКОЙ ИХ РАСШИРЕНИЯ ДЛЯ ВЫВОДА СООТВЕТСТВУЩЕЙ ИКОНКИ + ПРОВЕРКА НА НАЛИЧИЕ ЗНАЧЕНИЙ СВОЙСТВА:

1) в среду разработки добавить:
 
   <?php if ($arResult["PROPERTIES"]["TYPE_FILES"]["VALUE"] != ""):?>
        <div class="col-12 col-md-6">
        <h3 class="main-borrower-bottom-h3">
             Типовые формы
        </h3>
        <hr class="main-borrower-bottom-hr">
        <?php for($i=0; $i <= count($arResult["PROPERTIES"]["TYPE_FILES"]["VALUE"]); $i++ ) { ?>
        <?php if ($arResult["PROPERTIES"]["TYPE_FILES"]["DESCRIPTION"][$i] != '') { ?>
        <?php $path1 = CFile::GetPath($arResult["PROPERTIES"]["TYPE_FILES"]["VALUE"][$i]);
        $fil = CFile::GetByID($arResult["PROPERTIES"]["TYPE_FILES"]["VALUE"][$i]);
        $ext1 = substr($path1, strrpos($path1, '.') + 1);
        $size = $fil->arResult[0]["FILE_SIZE"];
        $sizes = array('Б', 'КБ', 'МБ', 'ГБ', 'ТБ', 'ПБ', 'ЭБ');
        for ($k = 0; $size > 1024 && $k < count($sizes) - 1; $k++)
             $size /= 1024;
        $cursize = round($size, 2) . " " . $sizes[$k];
        ?>
        <div class="main-borrower-bottom-file <?= strtolower($ext1); ?>-file">
             <div class="main-borrower-bottom-file-img"></div>
             <div class="main-borrower-bottom-file-right">
                  <p class="main-borrower-bottom-file-p">
                       <a href="<?=CFile::GetPath($arResult["PROPERTIES"]["TYPE_FILES"]["VALUE"][$i]);?>" class="main-borrower-bottom-file-p-a">
                            <?php echo $arResult["PROPERTIES"]["TYPE_FILES"]["DESCRIPTION"][$i];?>
                       </a>
                  </p>
             </div>
        </div>
        <?php } ?>
        <?php } ?>
    </div>
    <?php endif;?>

2) где $path1, $fil, $ext1, $size, $sizes - код для проверки формы;

3) <?php if ($arResult["PROPERTIES"]["TYPE_FILES"]["VALUE"] != ""):?> - код для проверки сущетсвования значений свойства. Если значения свойства нет, то
   
   блок не появится на странице.






ВЫВЕСТИ ПРОИГРЫВАТЕЛЬ ВИДЕО НА СТРАНИЦУ:

1) для этого нужно написать в теге iframe атрибут src "https://www.youtube.com/embed/идентификатор видео";

2) embed - без него не отобразиться видео на экране.





ВЫВЕСТИ СВОЙСТВО ИНФОБЛОКА ПО ФИЛЬТРУ:

1) записать над компонентом код:
		    <?
                        //global $arrFilter1; 
                        //$arrFilter1 = array( "PROPERTY_NOVINKA"=>"да", array("LOGIC" => "OR", array("PROPERTY_KHIT_PRODAZH"=>"да")));
                        $GLOBALS['arrFilter'] = array(
                            "PROPERTY_NUMBER_OF_FLOORS" => '1 этаж'
                        );
                    ?> - где NUMBER_OF_FLOORS - название свойства фильтрации, "1 этаж" - строка. Фильтрация происходит НЕ по списку, а по свойству товара "1 этаж". Свойство товара можно увидеть кликнув по самому товару и посмотрев его характеристики. В характеристиках будет указано, как правльно называется это свойство товара. Его и нужно скопировать.




СОЗДАТЬ ФИЛЬТР "МЕНЬШЕ" ДЛЯ СВОЙСТВА:

		    <?
                        //global $arrFilter1; 
                        //$arrFilter1 = array( "PROPERTY_NOVINKA"=>"да", array("LOGIC" => "OR", array("PROPERTY_KHIT_PRODAZH"=>"да")));
                        $GLOBALS['arrFilter'] = array(
                            "<=PROPERTY_LIVING_AREA" => 100
                        );
                    ?> - где <= знак меньше или равно, "LIVING_AREA" - название свойства, а 100 - число.




СОЗДАТЬ ФИЛЬТР "МЕЖДУ" ДЛЯ СВОЙСТВА:

		    <?
                        //global $arrFilter1; 
                        //$arrFilter1 = array( "PROPERTY_NOVINKA"=>"да", array("LOGIC" => "OR", array("PROPERTY_KHIT_PRODAZH"=>"да")));
                        $GLOBALS['arrFilter'] = array(
                            'LOGIC' => 'AND',
                            ">PROPERTY_LIVING_AREA" => 100,
                            "<=PROPERTY_LIVING_AREA" => 200
                        );
                    ?> - где > знак больше, <= меньше или равно нулю, "LIVING_AREA" - название свойства, а 100 и 200 - числа.




СОЗДАНИЕ ОТНОСИТЕЛЬНОЙ ССЫЛКИ НА БИТРИКС:

1) зайти в шаблон компонента или на страницу и прописать: <a href="/odnoetazhnye">Одноэтажные</a>

2) ссылка "/odnoetazhnye" берется от корня сайта и ее можно скопировать в Структуре сайта открыв соответствующую папку со страницей.






СОЗДАНИЕ ШАБЛОНА КОМПОНЕНТА

1) найти компонент с подходящим шаблоном. Для этого нужно:
	
	а) зайти в админку битрикс Контент - Файлы и папки и выбрать нужную папку, которая указана в ссылке http. Например в ссылке http://dev.vivat-instrument.ru/feedback/ название папки будет (feedback);

	б) войти в папку и нажать на три полоски слева от файла index.php - редактировать как html;

	в) подобрать нужный компонент, который находится справа от редактора;

2) найти файл php с этим шаблоном через среду разработки;

3) скопировать этот файл вместе с главной папкой, в котором он содержится и переименовать эту папку. Эта папка находится над папкой bitrix. Например, папка fabula или другая папка;

4) в админке битрикс, в поле редактирования index.php со вставленным нами компонентом, щелкнуть по компоненту и сделать следующее:
	
	а) в разделе Шаблон компонента выбрать нужный пункт (название скопированной папки);

	б) в Основных параметрах выбрать Тип инфоблока (например, Справочники);

	в) там же в пункте Инфоблок выбрать нужный инфоблок (например, [5]Отзывы);

	г) в пункте Количетсво новостей ввести количество элементов на странице, выводимых при помощи этого компонента;

5) Сохранить параметры компонента и результат редактирования файла index.php в битриксе + обновить кеш битрикса.



СОЗДАНИЕ НОВОЙ СТРАНИЦЫ ДЛЯ ФИЛЬТРА

1) на сайте нажать в панели управления на кнопку "Изменить страницу" -> выбрать нужный компонент и нажать редактировать;

2) выставить в параметрах компонента все необходимые данные, в том числе Шаблон компонента и Тип инфоблока;

3) Сохранить параметры - Скопировать код php и без сохранения закрыть окно редактирования страницы;

4) перейти в админку битрикс -> Контент -> Файлы и папки - Создать папку в корне сайта - Создать в папке файл index.php - вставить в нее скопированный код php;

5) для правильного отображения страницы, возможно потребуется вставить скопированный код php в теги, скопированные с другой похожей страницы или написанные самим.




СОЗДАНИЕ ССЫЛКИ НА СТРАНИЦУ, ОТНОСЯЩУЮСЯ К СТРАНИЦЕ САЙТА:

1) нужно зайти в админку Битрикс -> Контент -> Содержимое -> Страницы сайта -> выбрать нужный родительский раздел;

2) в этом разделе создать раздел (папку) и назвать по названию страницы;

3) добавить элементы (страницы) и прописать в них название страниц и символьный код (url страницы);

4) зайти в структуру сайта в NetBeans (среду разработки) -> скопировать в папку (по названию раздела) с index.php с компонентом страницы, с которой происходит ссылка

   или похожий компонент;

5) скопировать id страницы из Битрикс и вставить его в компонент страницы в строку "ELEMENT_ID" => "",

6) сохранить изменения.





СОЗДАНИЕ НОВОЙ СТРАНИЦЫ ДЛЯ МЕНЮ ИЛИ ССЫЛОК:

1) в среде разработки нужно найти папку страницы, из которой нужно будет перейти по ссылке на другую страницу и скопировать ее;

2) скопированную папку вставить в папку страницы, последнее название которой видно в ссылке на страницу, и переименовать ее;

3) зайти в Админку битрикс - Контент - Содержимое - Страницы сайта - нажать добавить элемент;

4) в элементе написать название и символьный код + скопировать id элемента;

5) зайти в Структуру сайта - Файлы и папки - найти созданную в среде разработки папку;

6) открыть папку - в index.php нажать редактировать как html - изменить параметры компонента - Основные параметры - вставить ID элемента из созданного элемента сайта;

7) Сохранить;

8) добавить относительную ссылку на страницу сайта, которую нужно будет скопировать в папке с index.php в Файлах и папках админки Битрикс, пункт "Путь".



СОЗДАНИЕ ПАГИНАЦИИ

1) в среде разработки переходим в шаблон нужного компонента и вставляем код: <?if($arParams["DISPLAY_BOTTOM_PAGER"]):?>
    <br /><?=$arResult["NAV_STRING"]?>
<?endif;?>

2) переходим в админку битрикс - Контент - Файлы и папки - нужная папка - index.php - редактировать как html;

3) щеклаем по компоненту и в разделе Настройки пограничной навигации выбираем шаблон постраничной навигации;

4) там же в пункте Выводить под списком или Выводить над списком ставим галочку (где поставим, там и выведится пагинация);

5) пишем название категории;

6) Сохранить параметры компонента и результат редактирования файла index.php в битриксе + обновить кеш битрикса.




КОПИРОВАНИЕ ШАБЛОНА КОМПОНЕНТА И ЕГО ВКЛЮЧЕНИЕ В КОМПОНЕНТ

1) в среде разработки найти нужный компонент в системной папке. Путь: исходные файлы - bitrix/components/bitrix;

2) скопировать первую родительскую папку этого шаблона, а также папку, в которой лежат файлы template.php, style.css и скопировать их тоже в свою пользовательскую папку. Путь: пользовательская папка (fabula) - components - bitrix;

3) редактировать html-шаблон, если нужно;

4) зайти в админку битрикс - Контент - Файлы и папки - нужная папка;

5) открыть файл как html;

6) запустить компонент;

7) вставить нужный шаблон (страницы или еще чего) в компонент.



КАК СОЗДАТЬ ИНФОРМАЦИОННЫЙ БЛОК, ДОБАВИТЬ ЕМУ ЭЛЕМЕНТ И ВЫВЕСТИ НА СТРАНИЦУ

Для этого нужно создать информационный блок + создать в нем элементы + добавить шаблон в компонент.

1) в админке битрикс заходим в Контент - Инфоблоки - Типы инфоблоков - нужный тип инфоблока (например, Справочники) - Создать инфоблок (кнопка справа);

2) заполняем в инфоблоке символьный код, название, ставим галку на Сайты и на Индексировать элементы на модуль поиска;

3) в Полях инфоблока - разрешить подключаться между text и html + галка на пункте Если код задан, то проверять на уникальность + галка на пункте Транслитерировать из названия при добавлении элемента;

4) в Свойствах элемента создать свойство;

5) в Поля разделов - галочка в пункте Картинка для анонса + разрешить подключаться между text и html + галка на пункте Если код задан, то проверять на уникальность + галка на пункте Транслитерировать из названия при добавлении раздела;

6) в Доступ - Для всех пользователей - Чтение + Администраторы - Полный доступ;

7) Сохранить.

8) перейти в Справочники сверху (если у нас инфоблок в справочнике) и добавить туда необходимые элементы;

9) Сохранить.

10) СКОПИРОВАТЬ ШАБЛОН КОМПОНЕНТА из системной папки bitrix/components/bitrix в пользовательскую папку (например, fabula);

11) перейти на страницу, в которой должен выводиться инфоблок - изменить страницу - визуальный редактор;

12) в визуальном редакторе выбрать нужный пункт, где должен находиться компонент и добавить компонент при помощи правого меню (например компонент "Список новостей");

13) открыть компонент в визуальном редакторе и настроить его, а именно - выбрать Шаблон компонента - Тип информационного блока - Код информационного блока. В Источниках данных есть свойства. Если нужного свойства нет (например "Картинки"), то поставить звездочку *;

14) Если поламаются стили, то нужно зайти в шаблон компонента (например, template.php) и удалить ссылки на файлы стилей вверху. Например, такие строки:
	$this->addExternalCss("/bitrix/css/main/bootstrap.css");
	$this->addExternalCss("/bitrix/css/main/font-awesome.css");
	$this->addExternalCss($this->GetFolder().'/themes/'.$arParams['TEMPLATE_THEME'].'/style.css').





ВСТАВИТЬ ПРОБЕЛЫ МЕЖДУ ЧИСЛАМИ ИЗ ЗНАЧЕНИЙ СВОЙСТВ ПРИ ПОМОЩИ PHP (http://www.php.su/number_format):

1) зайти в шаблон среды разработки с выводом значения -> найти нужный код вывода значения свойства. Например,

   <?php echo $arItem["PROPERTIES"]["SUMM1"]["VALUE"];?>;

2) вставить в в этот код функцию обработки строк number_format(). Например,
 
   number_format($arItem["PROPERTIES"]["SUMM1"]["VALUE"], 0, '', " ").






СОЗДАТЬ ССЫЛКУ У БЛОКА С ТОВАРОМ НА СТРАНИЦУ С ОРГАНИЗАЦИЕЙ, У КОТОРОЙ ЕСТЬ ЭТОТ ТОВАР, А ПРИ КЛИКЕ НА ТОВАР ЭТОЙ ОРГАНИЗАЦИИ ОТКРЫТЬ КАРТОЧКУ ТОВАРА:

1) зайти в админку Битрикс -> инфоблок с организацией;

2) в строке "URL страницы информационного блока:" написать: #SITE_DIR#;

3) в строке "URL страницы детального просмотра:" написать: /подкаталог со списком организаций/#ELEMENT_CODE#/ -> сохранить;

4) зайти в инфоблок с товарами организации;

5) в строке "URL страницы информационного блока:" написать: #SITE_DIR#/подкаталог со списком товаров организации/;

6) в строке "URL страницы детального просмотра:" написать: #SITE_DIR#/подкаталог со списком товаров организации/#ELEMENT_CODE#/ -> сохранить;

7) зайти в среду разработки -> шаблон вывода организации с товарами;

8) вставить php-код:

   <?php $attach = $arResult["PROPERTIES"]["НАЗВАНИЕ СВОЙСТВА ПРИВЯЗКИ К ЭЛЕМЕНТУ (ОРГАНИЗАЦИИ С ТОВАРАМИ)"]["VALUE"]?>
   <?php $el_res= CIBlockElement::GetByID( $attach ); ?>
   <?php if ($el_arr = $el_res->GetNext()); { ?>

   <a href="<?php echo $el_arr['DETAIL_PAGE_URL'];?>">
   какой-то блок
   </a>

   <?php } ?>

9) в том же шаблоне или, если используется другой шаблон в странице с организацией, в другом шаблоне указать код в атрибуте href:

   <?=$arItem['DETAIL_PAGE_URL']?>;

10) если нужно указать тип в ссылке для сабменю, то к <?=$arItem['DETAIL_PAGE_URL']?> приписать, например, ?type=debit_cards/.

11) <?=$arItem['DETAIL_PAGE_URL']?> - МОЖНО ИСПОЛЬЗОВАТЬ НА ЛЮБОЙ СТРАНИЦЕ. ГЛАВНОЕ ПРАВИЛЬНО ПРОПИСАТЬ ПУТИ, УКАЗАННЫЕ В ПУНКТАХ 5 И 6;

12) если нужно указать наименование элемента, который был привязан к этому элементу, то нужно вставить код:

    <?php echo $el_arr['NAME'];?>.






СОЗДАТЬ ФОРМУ ВОССТАНОВЛЕНИЯ ПАРОЛЯ:

1) создать папку /bitrix/templates/Мой шаблон/components/bitrix/system.auth.forgotpasswd;

2) скопировать в неё папку .default из /bitrix/components/bitrix/system.auth.forgotpasswd/templates;

3) результат будет примерно таким:
   /bitrix/templates/Мой шаблон/components/bitrix/system.auth.forgotpasswd/.default/template.php
   и прочие файлы шаблона;

4) папку .default переименовать.





PHP-КОД ДЛЯ ВЫВОДА ЗНАЧЕНИЙ НА СТРАНИЦУ ЧЕРЕЗ ВЕРСТКУ:

1) <div class="container result-page">
    <div class="row">
        <div class="col-12">
            <br /><br />
            <h2 class="like_h1">Все работы конкурса</h2>
        </div>
        <? foreach($valuesArr as $key => $value){ ?>
            <div class="col-12">
                <h2><?=getNameById($key);?></h2>
            </div>
        <?
            $col = 0;
            foreach($value as $key1 => $value1){     
                $col++;
                printTileAll($key1, $photosArr[$key1], '', $value1);
            }
        } ?>
      </div>
   </div> - ЭТОТ КОД ВЫЗЫВАЕТ СЛЕДУЮЩУЮ ФУНКЦИЮ ЧЕРЕЗ ЦИКЛ:

2) <?
function printTile($photo, $name, $result, $val){
    global $USER;
    ?>
<div class="col-sm-12 col-md-4">
    <?php
    $file = getImageThumb($photo);
    $fileBig = getImage($photo);
    ?>
    <div class="fancybox-wrap">
        <a data-fancybox="images" href="<?php echo $fileBig["src"]; ?>">
            <div class="photo-tile" style="background-image: url('<?= $file["src"] ?>')">
            </div>
        </a>
        <? if ($result) { ?>       
        <p><b><?=$result;?></b></p>        
        <? } ?>
        <p><b><?=$val;?> баллов</b></p>
        <p class="text-transform"><?=getNameById($name);?><br /><br /></p>
    </div>
</div>
<?php } 

function getImage($id) {
    return CFile::ResizeImageGet($id, array('width' => 3000, 'height' => 2000), BX_RESIZE_IMAGE_PROPORTIONAL_ALT, true);
}

function getImageThumb($id) {
    return CFile::ResizeImageGet($id, array('width' => 350, 'height' => 350), BX_RESIZE_IMAGE_EXACT, true);
}

?>





ВОССТАНОВИТЬ САЙТ НА BITRIX, ЕСЛИ ПАМЯТЬ ЗАБИЛАСЬ ПОСЛЕ СОЗДАНИЯ РЕЗЕРВНОЙ КОПИИ И САЙТ ОБВАЛИЛСЯ:

1) зайти в FileZilla -> подключиться к сайту -> найти в папке bitrix папку backup;

2) удалить из папки все архивные копии, кроме index.php.






АКТИВАЦИЯ БИТРИКС

1) Для активации битрикс нужно зайти в Администрирование - "Marketplace" - "Обновление платформы";

2) Ввести ключ продукта;

3) Обновтиь siteUpdate;

4) Зарегистрировать ключ - принять лицензионное соглашение - OK;

5) Больше ничего жать не надо.








СОЗДАТЬ FANCYBOX НА САЙТЕ:

1) зайти на сайт http://fancyapps.com/fancybox/3/;

2) подключить скрипты, которые расположены в подпункте 1 пункта "Быстрый старт";

3) выбрать нужный вариант раскрытия блоков (ниже на сайте) и скопировать их атрибуты;

4) вставить атрибуты так, как указано в подпункте 2 пункта "Быстрый старт";

5) вставить следующий php-код в шаблон компонента (html-код для примера):

    <? $file = CFile::ResizeImageGet($arElement["PROPERTIES"]["IMAGE"]["VALUE"][0], array('width'=>400, 'height'=>300), BX_RESIZE_IMAGE_PROPORTIONAL_ALT , true); ?>
    <? $filebig = CFile::ResizeImageGet($arElement["PROPERTIES"]["IMAGE"]["VALUE"][0], array('width'=>1500, 'height'=>1200), BX_RESIZE_IMAGE_PROPORTIONAL_ALT , true); ?>
    <a data-fancybox="images" href="<?=$filebig["src"]?>">
        <div>
        </div>
        <img border="0" src="<?=$file["src"]?>" alt="<?=$arResult["NAME"]?>" />
    </a>

6) $arElement - это массив, который берется из цикла. Его нужно изменить на используемый. Например, на $arItem. Она берется из атрибута href. $file - сжатое
   изображение (в array указана максимальная ширина и высота изобаражения). $filebig - полное изображение с указанием максимальной ширины и высоты в array;

7) =$filebig["src"] - ссылка на полное изображение, которое раскрывается при нажатии на элемент. =$file["src"] - ссылка на сжатое изображение.





ПОМЕНЯТЬ ПУНКТЫ МЕНЮ МЕСТАМИ ИЛИ СОЗДАТЬ ПУНКТЫ МЕНЮ В БИТРИКС:

1) войти на нужную страницу сайта с включенной Панелью управления Битрикс;

2) на Панели управления щелкнуть по пункту "Меню" -> Редактировать нужное меню;

3) добавить, поменять местами или удалить пункт меню в Битрикс.




ДОБАВИТЬ ОКВЭД В БИТРИКС:

1) зайти в админку Битрикс;

2) Контент -> Типы инфоблоков -> Содержимое;

3) Реестр проектов -> свойство инфоблока -> найти ОКВЭД;

4) Справа от ОКВЭД найти кнопку с тремя точками и нажать ее;

5) Добавить новые ОКВЭД - Сохранить - Сохранить.





ОТОБРАЖЕНИЕ РАЗНОЙ ИНФОРМАЦИИ В ЗАВИСИМОСТИ ОТ СТРАНИЦЫ НА БИТРИКС:

1) Нужно найти шаблон компонента в среде разработки;

2) Найти нужные теги и вставить следующий код:

	    <?if($APPLICATION->GetCurPage() == "/industry/development-projects/"):?>

            	теги
            
            <?else:?>
            
            	теги

            <?endif;?>

   Если нужно вставить путь на главную страницу, то поставить <?if($APPLICATION->GetCurPage() == "/"):?>

3) обращаю внимание на то, что в GetCurPage() == "" нужно прописывать относительные ссылки от корня сайта;

4) теги - это теги, которые должны меняться в зависимости от страницы сайта.





ОТОБРАЖЕНИЕ ИНФОРМАЦИИ В ЗАВИСИМОСТИ ОТ ПОДКАТАЛОГА (ДИРЕКТОРИИ) БИТРИКС:

1) Нужно в среде разработки в шаблон компонента вставить следующий код:

   <?if(CSite::InDir('/banks/')):?>

       теги
            
   <?else:?>
            
       теги

   <?endif;?>

2) обращаю внимание на это CSite::InDir('/подкаталог сайта/');

3) теги - это теги, которые должны меняться в зависимости от страницы сайта.





ОТОБРАЖЕНИЕ ИНФОРМАЦИИ В ЗАВИСИМОСТИ ОТ АВТОРИЗАЦИИ ПОЛЬЗОВАТЕЛЯ:

1) в среде разработки найти файл шаблона;

2) внести в html-код php-код следующего содержания:

   <?php if ($USER->IsAuthorized()) { ?>

   если юзер авторизован, то html-код

   <?php } else { ?>

   html-код

   <?php } ?>




ОТОБРАЖЕНИЕ ДЕТАЛЬНОГО ОПИСАНИЯ ЭЛЕМЕНТА ИНФОБЛОКА ПРИ ПОМОЩИ МЕТОДА GetByID():

1) подключить модуль сверху основного кода: <?php if(!CModule::IncludeModule("iblock"))
                                return;                     
                            ?>

2) вставить код:

   <?php
   $res = CIBlockElement::GetByID($nomination);
   if($ar_res = $res->GetNext()) { ?>
       <span class="nom-block__title detail-text"><?php echo $ar_res['DETAIL_TEXT'];?></span>
   <?php } ?>

   где:

   а) $nomination - id элемента, записанный в переменную, которая вывелась через foreach. Этот id может и не выводиться через foreach.

   б) <?php echo $ar_res['DETAIL_TEXT'];?> - код детального описания







ВЫВОД НА СТРАНИЦУ РАСШИФРОВКИ РАЗМЕРОВ ОДЕЖДЫ В ЗАВИСИМОСТИ ОТ СТАНДАРТНЫХ РАЗМЕРОВ ЧЕРЕЗ БИТРИКС:

	Нам здесь понадобится использовать метод GetList - это метод, который возвращает список элементов по фильтру arFilter. Метод статический.

	Для того, чтобы разобраться в методе GetList, нужно прочитать мануал: https://dev.1c-bitrix.ru/api_help/iblock/classes/ciblockelement/getlist.php

и посмотреть видос: https://www.youtube.com/watch?v=lzHx_WcDmN8

1) создать инфоблок с размерами товаров согласно таблицы, переданной заказчиком. Например, создать в Каталоге товаров свойства:

   - Бренд (обязательное), тип справочник;

   - Категория товара (множественное, обязательное), тип привязка к разделу;

   - Размер товара (множественное, обязательное), тип строка;

   - Европейский размер (множественное), тип строка;

   - Российский размер (множественное), тип строка;

   - Обхват груди (множественное), тип строка;

   - Обхват талии (множественное), тип строка;

   - Обхват бедер (множественное), тип строка.

2) установить галку во всех свойствах "Показывать на странице редактирования элемента";

3) войти в настройки свойства с типом "Справочник" -> Дополнительные настройки -> выбрать нужный справочник (например, подкатегории);

4) сохранить инфоблок;

5) войти в элементы созданного инфоблока -> создать элемент (например, Трусы) -> выбрать бренд и категорию товара вместе с подкатегориями -> записать все размеры

   из таблицы и сохранить элемент;

6) зайти в шаблон template.php и вставить код для проверки на модуль:

   <?php
        if(CModule::IncludeModule("iblock"))
        { ... }

7) в этот код вставить GetList с кодом проверки (фильтр) выводимого инфоблока, категории (тип товара) и подкатегории (бренда) с проверкой инфоэлемента на активность,

   а также присвоить массив элементов полученных свойств любой новой переменной:
   
            $arSelect = Array("ID", "IBLOCK_ID", "NAME", "DATE_ACTIVE_FROM","PROPERTY_*");//IBLOCK_ID и ID обязательно должны быть указаны, см. описание arSelectFields выше
            $arFilter = Array("IBLOCK_ID" => 44, "ACTIVE_DATE"=>"Y", "ACTIVE"=>"Y", "PROPERTY_PRODUCT_CATEGORY"=>$arResult['IBLOCK_SECTION_ID'], "PROPERTY_MANUFACTURER"=>$arResult['PROPERTIES']['PODKATEGORIYA']['VALUE']);
            // print_r($arFilter);
            $res = CIBlockElement::GetList(
                    Array(),
                    $arFilter,
                    false,
                    false,
                    $arSelect
            );
            while($ob = $res->GetNextElement()){ 
                $arFields = $ob->GetFields();
                $arFields['PROPERTIES'] = $ob->GetProperties();
                $arProps = $arFields;
            }

   , где:

   а) "IBLOCK_ID" => 44 - фильтр по инфоблоку с идентификатором 44;

   б) "ACTIVE" - фильтрует по активности инфоэлементов. Значение "Y" означает, что будет true, если блок активный;

   в) "ACTIVE_DATE"=>"Y" - фильтрует по дате начала активности элементов (нужно для элементов с отложенной датой активности (для товаров, которые выводятся на сайт

      в определенный день)). Если во время фильтрации элемент активный, то будет true.

   г) "PROPERTY_PRODUCT_CATEGORY" - название свойства категории PROPERTY_ - обозначение свойства, а PRODUCT_CATEGORY - название самого свойства;

   д) $arResult['IBLOCK_SECTION_ID'] - идентификатор категории товара;

   е) "PROPERTY_MANUFACTURER" - название свойства подкатегории;

   ё) $arResult['PROPERTIES']['PODKATEGORIYA']['VALUE'] - значение свойства подкатегории;

   ж) затем значения свойств попадают в метод GetList, который вернет список всех элементов, прошевших фильтрацию arFilter;

   з) в цикле while происходит добавление свойств со значениями возвращенных методом GetList элементов в массив с подмассивом PROPERTIES;

   и) переменной $arProps присваивается массив $arFields. $arProps - это тот массив, который будет использоваться дальше.

8) затем добавляем условный опрератор <?php if (checkSizing($arProps) === true) { ... } ?>, который проверяет на true наличие значений свойств обязательного свойства.

   В данном случае это свойство называется 'SIZE_PRODUCT'. Если функция checkSizing($arProps) с массивом $arProps из пункта 7(и) возвращает true, то вставляется

   тег с php-кодом вывода свойств. Иначе теги не вставляются. Код проверки наличия обязательного свойства:

   <?php function checkSizing($arProps) 
        {
            for($i=0; $i < count($arProps['PROPERTIES']['SIZE_PRODUCT']['VALUE']); $i++)
            {
                if ($arProps['PROPERTIES']['SIZE_PRODUCT']['VALUE'][$i] != '')
                {
                    return true;
                }
            }
            return;
        }
        ?>

9) Код вывода свойств на экран:

   <div class="window-sizes-section" style="display: none;">

        <?php for($i=0; $i < count($arProps['PROPERTIES']['SIZE_PRODUCT']['VALUE']); $i++) {?>
            <div class="window-sizes">
                <div class="window-sizes-dl">
                    <?php if($arProps['PROPERTIES']['SIZE_PRODUCT']['VALUE'][$i] != '') { ?>
                    <div class="window-sizes-dt">
                        Размер товара
                    </div>
                    <div class="window-sizes-dd"><?php echo trim($arProps['PROPERTIES']['SIZE_PRODUCT']['VALUE'][$i], " ");?></div>
                    <?php } ?>
                    <?php if($arProps['PROPERTIES']['EUROPEAN_SIZE']['VALUE'][$i] != '') { ?>
                    <div class="window-sizes-dt">
                        Европейский размер
                    </div>
                    <div class="window-sizes-dd"><?php echo trim($arProps['PROPERTIES']['EUROPEAN_SIZE']['VALUE'][$i], " ");?></div>
                    <?php } ?>
                    <?php if($arProps['PROPERTIES']['RUSSIAN_SIZE']['VALUE'][$i] != '') { ?>
                    <div class="window-sizes-dt">
                        Российский размер
                    </div>
                    <div class="window-sizes-dd"><?php echo trim($arProps['PROPERTIES']['RUSSIAN_SIZE']['VALUE'][$i], " ");?></div>
                    <?php } ?>
                    <?php if($arProps['PROPERTIES']['BREAST_GIRL']['VALUE'][$i] != '') { ?>
                    <div class="window-sizes-dt">
                        Обхват груди
                    </div>
                    <div class="window-sizes-dd"><?php echo trim($arProps['PROPERTIES']['BREAST_GIRL']['VALUE'][$i], " ");?></div>
                    <?php } ?>
                    <?php if($arProps['PROPERTIES']['CIRCUITING_WAIST']['VALUE'][$i] != '') { ?>
                    <div class="window-sizes-dt">
                        Обхват талии
                    </div>
                    <div class="window-sizes-dd"><?php echo trim($arProps['PROPERTIES']['CIRCUITING_WAIST']['VALUE'][$i], " ");?></div>
                    <?php } ?>
                    <?php if($arProps['PROPERTIES']['HIP_GIRTH']['VALUE'][$i] != '') { ?>
                    <div class="window-sizes-dt">
                        Обхват бедер
                    </div>
                    <div class="window-sizes-dd"><?php echo trim($arProps['PROPERTIES']['HIP_GIRTH']['VALUE'][$i], " ");?></div>
                    <?php } ?>
                </div>
            </div>

        <?php } ?>
        
        </div>
  







ВЫВЕСТИ НА СТРАНИЦУ ИНФОРМАЦИЮ В ЗАВИСИМОСТИ ОТ УСЛОВИЯ (НАПРИМЕР, ОТ ТОГО, ОПТОВЫЙ ПОКУПАТЕЛЬ ИЛИ РОЗНИЧНЫЙ):

1) зайти в корневую папку -> папка сайта -> php_interface -> init.php;

2) найти код, который проверяет на true и false оптового покупателя. Например, код:

   if (getPriceTypeValueNew() == 'opt'){
      $arFields['OPT'] = 1;
   } else {
      $arFields['OPT'] = 0;
   }

3) вставить в файл со страницей, на которой нужно вывести информацию следующий код:

   <?php if (getPriceTypeValueNew() == 'opt') { ?>

   если покупатель оптовый, то один текст;

   <?php } else { ?>

   другой текст;

   <?php } ?>

4) сохранить изменения.







ВЫВЕСТИ ИНФОРМАЦИЮ НА САЙТЕ В ЗАВИСИМОСТИ ОТ ИМЕНИ ДОМЕНА:

1) прописать в нужном файле php-код:

   <?php 
   $serverName = $_SERVER['SERVER_NAME'];
   if($serverName == 'faenso.ru')
   { ?>

   если домен сайта совпадает, то вывести одну инфу
   
   <?php } else { ?>

   иначе другую инфу

   <?php } ?>

2) сохранить изменения.







ПРОИЗВЕСТИ ОТПРАВКУ ФАЙЛОВ ЧЕРЕЗ UNISENDER ПРИ ПОМОЩИ УСТАНОВКИ ФЛАЖКА НА СВОЙСТВЕ типа "СПИСОК" "ОТПРАВИТЬ ФАЙЛЫ":

1) для этого нужно создать свойство инфоблока в админке битрикс типа "Список" для отправки сообщений;

2) в файле init.php в классе class UFCP_CONSTANTS прописать номер инфоблока. Например, public static $IBLOCK_MEMBERS_MAILING = 26;

3) вставить обработчик события AddEventHandler() с событием "OnAfterIBlockElementUpdate" (запускается после сохранения изменения свойства в элементе инфоблока).

   Например, 
 
   AddEventHandler("iblock", "OnAfterIBlockElementUpdate", Array("SertificatsLetters", "OnAfterIBlockElementUpdateHandler"));

   class SertificatsLetters
{
    public static $disableHandler = false;
 //что бы не было зацикливания , важно потому что если не сделать  это,
// наш скрипт будет работать до того момента пока не исчерпает время или память
     
    function OnAfterIBlockElementUpdateHandler(&$arFields)
    { 
        if (self::$disableHandler)
        {
            return;
        }
        
        CModule::IncludeModule("iblock");
        if( $arFields["ID"]> 0 && $arFields["IBLOCK_ID"] == "26") //оприделяем ид ИБ !
        {
            
            
 
            //наши действия 
 
             
//            $el = new CIBlockElement;
//            $arrFile = CFile::MakeFileArray($file);
//            $arLoadProductArray = Array(
//                "ACTIVE"         => "Y",            // активен
//                "DETAIL_PICTURE" => $arrFile,
//                "PREVIEW_PICTURE" => $arrFile,
//
//            );
//            self::$disableHandler = true; //отключаем
//            if($res = $el->Update($arFields["ID"], $arLoadProductArray))
//
//            {
                if ($arFields["PROPERTY_VALUES"]["101"]["0"]["VALUE"] === "16" &&
                    $arFields["PROPERTY_VALUES"]["103"]["n0"]["VALUE"] === "")
                {
                    takeEmailAddress($arFields);
                }
//            }
 
        }
         
    }
}

4) прописываем функцию, которая отвечает за отправку сообщений вместе с методом SetPropertyValuesEx(), который отвечает за перезапись свойств элементов.

   Перезапись свойства элемента необходимо для того, чтобы после отправки изменить свойство типа "Список" и, в условном операторе из пункта 3 проверить,

   является ли это свойство пустым или нет. Если оно не пустое, то функция потравки сообщений вызываться не будет. Например:

   function takeEmailAddress($arFields)
{
    $contest = $arFields["ID"];
    
    if (file_exists($_SERVER["DOCUMENT_ROOT"]."/contest/".$contest) === true)
    {
        $folder = $_SERVER["DOCUMENT_ROOT"] . "/contest/" . $contest;
        $files = scandir($folder);
        
        for ($i = 0; $i <= count($files); $i++)
        {
            $path = $_SERVER["DOCUMENT_ROOT"] . "/contest/" . $contest . "/" . $files[$i];
            $subfiles = scandir($path);
            
            for ($a = 0; $a <= count($subfiles); $a++)
            {
                $subpath = "http://ufcp.pro/contest/". $contest . "/" . $files[$i] . "/" . $subfiles[$a];
                $subsubfiles = scandir($subpath);
                $email = basename($subpath, ".pdf");
                mailMailer($email, $subpath);
            }
        
            if (count($files) === $i)
            {
                $ELEMENT_ID = $contest;  // код элемента
                $PROPERTY_CODE = "103";  // код свойства
                $PROPERTY_VALUE = "Сертификаты отправлены.";  // значение свойства

                // Установим новое значение для данного свойства данного элемента
                CIBlockElement::SetPropertyValuesEx($ELEMENT_ID, false, array($PROPERTY_CODE => $PROPERTY_VALUE));
            }
        }
    }
}

mailMailer($email, $subpath) - вызов функции unisender для отправки сообщений.

scandir($folder) - получает массив списка файлов и каталогов по указанному пути.

die($arFields) - прекращает выполнение скрипта, в том числе, в админке Битрикс, и выводит значение(я) или ошибку. Например:

?>
<pre>
<?php
die(print_r($numberNomination));
?>
</pre>
<?php

<pre> - тег, который делает информацию, выводимую массивом читабельной.







ВСТАВИТЬ ВОЗМОЖНОСТЬ ПОИСКА ПО СВОЙСТВУ ИНФОБЛОКА НА САЙТЕ:

1) в админке битрикс зайти в нужный инфоблок со свойством;

2) зайти в настройки свойства инфблока и поставить галку напротив пункта "Значения свойства участвуют в поиске" -> сохранить настройки -> сохранить инфоблок;

3) зайти в Настройки -> Поиск -> Переиндексация -> снять галку напротив "Переиндексировать только измененные" -> нажать на "Переиндексировать".





СОЗДАТЬ РЕЗЕРВНЫЕ КОПИИ:

1) зайти в админку Битрикс -> Настройки -> Инструменты -> Резервное копирование -> Создание резервных копий;

2) во вкладке "Резервное копирование" -> пункт "Размещение резервной копии" -> выбрать "в папке сайта";

3) в "Параметрах" нажать на пункт "Включить экспертные настройки создания резервной копии" -> Максимальный размер несжатых данных в одной части архива (МБ) -> 

   2000 -> создать резервную копию;

4) там же -> Длительность шага -> 14;

5) если при создании резервной копии вышла ошибка, то уменьшить длительность шага.





ОБНОВИТЬ ШАБЛОН БИТРИКС:

	Для этого нужно создать копию шаблона сайта, которая будет видна всем пользователям, а основной шаблон сделать видимым только администраторам.
Основной шаблон нужно обновить и отредакировать.

1) зайти в админку Битрикс -> Настройки -> Настройки -> Шаблоны сайтов;

2) выбрать действущий шаблон -> скопировать шаблон (можно изменить его имя);

3) зайти в список сайтов -> выбрать нужный сайт -> Изменить;

4) в основном шаблоне нужно указать Тип условия -> Для групп пользователей -> Условие -> Администраторы;

5) проверить отображаются ли изменения. Для этого нужно:

   а) зайти в Файлы и папки -> Bitrix -> templates -> скопированный шаблон -> header.php;

   б) внести в этот файл изменения и сохранить.

6) зайти на сайт под администратором и в инкогнито. Если в инкогнито изменения отображаются, а в администраторе нет, то все работает верно;

7) зайти в Marketplace -> Обновление решений -> Список обновлений -> выбрать нужно обновление (с остальных снять галки) -> нажать на кнопку "Загрузить".





ПРАВКА ОБНОВЛЕННОГО ШАБЛОНА БИТРИКС:

	Для этого нужно подключить общий файл стилей для правок стилей, который будет работать на всех шаблонах.

1) заходим в среду разработки -> Корень сайта -> bitrix -> php_interface -> init.php;

2) вставляем в файл код -> $APPLICATION->SetAdditionalCss("полный путь до файла начиная от папки "bitrix"/styles.css").






СОЗДАНИЕ ПОДМЕНЮ В БИТРИКС:

1) зайти в дефолтные шаблоны меню Битрикс и скопировать папку horizontal_multilevel в рабочую папку сайта. 
   
   Корень сайта -> bitrix -> components -> bitrix -> menu -> horizontal_multilevel;

2) в header прописать название папки, которую нужно вызвать, а также указать уровень вложенности меню 2 (максимум 4). "MAX_LEVEL" => "2";

3) в админке битрикс зайти в папку, ссылка на которую есть в пункте меню, в которое нужно вложить подменю;

4) добавить туда меню, например, тип левый;

5) добавить в это подменю пункты меню -> сохранить.






ПРИ ИЗМЕНЕНИИ ИЛИ СОЗДАНИИ ЭЛЕМЕНТА ИНФОБЛОКА ДОБАВИТЬ ЗНАЧЕНИЕ В СВОЙСТВО ЭЛЕМЕНТА:

1) для этого понадобятся события: "OnAfterIBlockElementAdd"(после добавления элемента), "OnAfterIBlockElementUpdate"(после изменения элемента),

   а также файл init.php, который находится в папке bitrix -> php_interface;

2) вставить в файл "init.php" следующий код:

   AddEventHandler("iblock", "OnAfterIBlockElementUpdate", Array("updateUniversalSize", "OnAfterIBlockElementUpdateHandler"));

   class updateUniversalSize
   {
      public static $disableHandler = false;
      function OnAfterIBlockElementUpdateHandler(&$arFields)
      {        
          if($arFields["ID"] > 0 && $arFields["IBLOCK_ID"] == "22")
          {
              $ELEMENT_ID = $arFields["ID"];
              $PROPERTY_CODE = "384";
              $PROPERTY_VALUE = $arFields["PROPERTY_VALUES"]["257"]["179799665"]["VALUE"];
              CIBlockElement::SetPropertyValuesEx($ELEMENT_ID, false, array($PROPERTY_CODE => $PROPERTY_VALUE));
          }
       }
   }

3) "updateUniversalSize" - наименование класса;

   "OnAfterIBlockElementUpdateHandler" - название функции класса;

   "public static $disableHandler = false" - чтобы не было зацикливания, иначе скрипт будет работать до того момента пока не исчерпает время или память;

   "if($arFields["ID"]> 0 && $arFields["IBLOCK_ID"] == "22")" - проверка на инфоблок и наличие элементов в этом инфоблоке;

   "CIBlockElement::SetPropertyValuesEx($ELEMENT_ID, false, array($PROPERTY_CODE => $PROPERTY_VALUE))" - метод добавление значения свойства в элемент;

   "$ELEMENT_ID" - id элемента;

   "$PROPERTY_CODE" - код свойства;

   "$PROPERTY_VALUE" - значение свойства.






УБРАТЬ ВЫВОД НАЗВАНИЕ ИНФОБЛОКА В TITLE СТРАНИЦЫ:

1) зайти в файл со страницей, в котором вызывается нужный компонент;

2) в пунтке вызова компонента "SET_TITLE" => "Y" изменить Y на N.






ОТСОРТИРОВАТЬ ЭЛЕМЕНТ ПО СВОЙСТВУ:

1) создать в инфоблоке свойство с типом "Дата/Время";

2) добавить сортировку по свойству можно 2 способами:

   а) войти на страницу с вызовом шаблона и заменить в нем дву строки на: 
                            "SORT_BY1" => "PROPERTY_НАЗВАНИЕ СВОЙСТВА",
                            "SORT_ORDER1" => "СПОСОБ СОРТИРОВКИ (ПО ВОЗРАСТАНИЮ - "ASC" ИЛИ ПО УБЫВАНИЮ - "DESC")",

   б) зайти на странице сайта в визуальный редактор -> открыть нужный компонент и в пункте "Источник данных" в "Поле для первой сортировки новостей" указать ->

   Другое и PROPERTY_НАЗВАНИЕ СВОЙСТВА. Потом в "Направление для первой сортировки новостей" указать способ сортировки.






ПРОВЕРКА НА ДОМЕН:

1) создать метод, например, isSubDomain();

2) использовать его в коде вывода информации на страницу. Например:

		<?php
                if (isSubDomain() === 'malinamebel') {
                    ?>
                    <div><?=$arResult["~DESCRIPTION"]?></div>
                <?
                } else {
                    $domain = 'UF_CITY' . strtoupper(isSubDomain());
                    
                    echo htmlspecialchars_decode($arResult[$domain]);
                }
                ?>






ЕСЛИ НЕЛЬЗЯ ВЫВЕСТИ ТЕКСТ НА КОНКРЕТНОМ ПОДДОМЕНЕ (В ЗАВИСИМОСТИ ОТ ГОРОДА):

	Это означает, что при первом вызове компонента с информацией, кешируются компонент хоста сервера (домена). Чтобы это исправить, нужно:

1) в вызове компонента, которым выводится информация взависимости от поддомена прописать следующее:

	"SUB_DOMAIN" => isSubDomain() - где "SUB_DOMAIN" - произвольное название параметра вызова компонента;

	isSubDomain() - метод, которым проверяется поддомен.





НАСТРОЙКА СТРАНИЦЫ 404 ОШИБКИ В БИТРИКС:
	
	https://alfavitka.ru/nastroyka-stranicy-404-bitrix/






УБРАТЬ Kernel JS и CSS С САЙТА ДЛЯ НЕАВТОРИЗОВАННЫХ ПОЛЬЗОВАТЕЛЕЙ SEO GOOGLE

	http://postoev.ru/blog/kernel-remove-js-css






НАСТРОЙКА КОРРЕКТНОЙ ОЧИСТКИ КОРЗИНЫ:

Бывает, что при нажатии на кнопку "Очистить корзину" вместо очистки товаров корзина переходит к оформлению заказа или другим действиям. Для того, чтобы это
исправить, следуйте инструкциям ниже.

Часть того, что нужно, описано здесь: https://dev.1c-bitrix.ru/support/forum/forum6/topic43020/, но, лучше сделать так, как написал я.

1) заходим в шаблон компонента корзины на Битрикс. Например, корень сайта -> bitrix -> templates -> название папки с компонентами сайта -> components -> bitrix -> sale.basket.basket -> eshop;

2) в файле basket_items.php находим тег с "Очистка корзины", комментим его и вставляем тег:
	<a class="clear_cart" href="<?=$APPLICATION->GetCurPage();?>?action=clear">Очистить корзину</a>

3) заходим в файл с вызовом компонента корзины. Например, корень сайта -> personal -> cart -> index.php;

4) над вызовом компонента корзины вставляем код:
	if($_REQUEST["action"] == "clear" && CModule::IncludeModule("sale")) 
	{
    		CSaleBasket::DeleteAll(CSaleBasket::GetBasketUserID());
	}

5) все сохраняем и чистим весь кеш. Очистка корзины должна работать корректно.








ОТСОРТИРОВАТЬ ВЫВОД ЭЛЕМЕНТВО ПО ДАТЕ ЧЕРЕЗ GETLIST:

1) найти код, например, CIBlockElement::GetList(Array(), $arFilter, false, Array("nPageSize"=>50), $arSelect);

2) вставить в GetList(Array(), ...) элементы "SORT"=>"ASC", 'ID' => 'DESC';

3) сохранить и очистить кеш.








СДЕЛАТЬ ПУКНТ ФОРМЫ ОФОРМЛЕНИЯ ЗАКАЗА В КОРЗИНЕ ОБЯЗАТЕЛЬНЫМ

1) в Битрикс перейти в список свойств заказа: Рабочий стол -> Магазин -> Настройки -> Свойства заказа -> Список свойств;

2) выбрать нужное свойтсво и нажать на "Изменить параметры свойства";

3) в разделе "Тип данных" поставить галочку на "Обязательное" -> Сохранить.





НАСТРОИТЬ УМНЫЙ ФИЛЬТР ЧПУ

	1) В целом, примерная (не опробованная) инструкция написана на этом форуме: https://dev.1c-bitrix.ru/support/forum/forum6/topic75475/





СЖАТИЕ ИЗОБРАЖЕНИЙ НА СТРАНИЦЕ В БИТРИКС:

	Описание функции есть здесь: https://dev.1c-bitrix.ru/api_help/main/reference/cfile/resizeimageget.php

	Пример функции: <? $img = CFile::ResizeImageGet($image, array('width'=>350, 'height'=>200), BX_RESIZE_IMAGE_EXACT, true); ?>

	Где:

	1) $image - само изображение;

	2) array('width'=>350, 'height'=>200) - массив с размерами изображения для вывода;

	3) BX_RESIZE_IMAGE_EXACT - способ сжатия изображения. В данном случае масштабирует в прямоугольник $arSize c сохранением пропорций, обрезая лишнее.

	(годится для превью (минимальное изоюаржение для СЕО));

	4) BX_RESIZE_IMAGE_PROPORTIONAL - масштабирует с сохранением пропорций, размер ограничивается $arSize;

	5) BX_RESIZE_IMAGE_PROPORTIONAL_ALT - масштабирует с сохранением пропорций (вариант для полной картинки).






НАСТРОЙКА LESS В NETBEANS

1) для этого нужно создать папку less и папку css рядом с файлом index.php;

2) в этих папках создать файл style.less и файл style.css в соответствующих папках;

3) зайти в Файл -> Свойства(название проекта) -> Препроцессоры CSS -> вкладка LESS;

4) в пунктах "Ввод" и "Вывод" указать путь до папки less и css от корня сайта -> OK;

5) если компилятор не скомпилировал стили из less в css, нужно проверить путь до этих папка в свойствах проекта.




НАСТРОЙКА SWIPER:

1) скачать файлы swiper с сайта https://idangero.us/swiper;

2) перейти на вкладку https://idangero.us/swiper/demos/;

3) заливаем все это на сайт;

4) заходим в файл custom old.jquery.js и, если у нас больше одного слайдера на странице, копируем код, начинающийся
   с var swiper = new Swiper('.swiper-container.main-slide' - где "main-slide" является классом, который задаю я справа от класса swiper-container.

5) меняем остальные параметры. Например, autoplay и speed. autoplay - задержка перед перелистыванием, а speed - скорость перелистывания.






НАСТРОЙКА SITEMAP И ROBOTS:

1) сначала нужно настроить robots: https://www.youtube.com/watch?v=36cNZPtG1PE&feature=emb_err_woyt;

2) потом sitemap: .